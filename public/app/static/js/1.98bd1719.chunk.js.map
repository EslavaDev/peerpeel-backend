{"version":3,"sources":["../node_modules/chart.js/src/helpers/index.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.element.js","../node_modules/chart.js/src/core/core.scaleService.js","../node_modules/chart.js/src/elements/index.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/helpers/helpers.core.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/chart.js/src/chart.js","../node_modules/chartjs-color/index.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/platforms/platform.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.tooltip.js","../node_modules/chart.js/src/core/core.js","../node_modules/chart.js/src/helpers/helpers.easing.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.js","../node_modules/chart.js/src/core/core.helpers.js","../node_modules/color-convert/index.js","../node_modules/color-convert/conversions.js","../node_modules/chartjs-color-string/color-string.js","../node_modules/color-name/index.js","../node_modules/chart.js/src/elements/element.arc.js","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.js","../node_modules/chart.js/src/elements/element.rectangle.js","../node_modules/chart.js/src/platforms/platform.basic.js","../node_modules/chart.js/src/platforms/platform.dom.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/moment/moment.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/charts/Chart.Bar.js","../node_modules/chart.js/src/charts/Chart.Bubble.js","../node_modules/chart.js/src/charts/Chart.Doughnut.js","../node_modules/chart.js/src/charts/Chart.Line.js","../node_modules/chart.js/src/charts/Chart.PolarArea.js","../node_modules/chart.js/src/charts/Chart.Radar.js","../node_modules/chart.js/src/charts/Chart.Scatter.js","../node_modules/chart.js/src/plugins/index.js","../node_modules/chart.js/src/plugins/plugin.filler.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js"],"names":["module","exports","__webpack_require__","easing","canvas","options","helpers","_set","scope","values","merge","this","color","Element","configuration","extend","initialize","apply","arguments","prototype","hidden","pivot","me","_view","clone","_model","_start","transition","ease","model","start","view","i","ilen","key","actual","origin","target","type","c0","c1","keys","Object","length","hasOwnProperty","valid","mix","rgbString","isFinite","interpolate","tooltipPosition","x","y","hasValue","isNumber","inherits","defaults","layouts","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","undefined","getScaleDefaults","scale","updateScaleDefaults","additions","addScalesToLayout","chart","each","scales","fullWidth","position","weight","addBox","Arc","Line","Point","Rectangle","filterByPosition","array","where","v","sortByWeight","reverse","forEach","_tmpIndex_","sort","a","b","v0","v1","item","boxes","push","removeBox","layoutItem","index","indexOf","splice","configure","prop","props","update","width","height","layoutOptions","layout","padding","toPadding","leftPadding","left","rightPadding","right","topPadding","top","bottomPadding","bottom","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","concat","box","minSize","isHorizontal","horizontal","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","Math","max","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","chartArea","minBox","Ticks","labelsFromTicks","ticks","labels","label","getLineValue","offsetGridLines","lineValue","getPixelForTick","computeTextSize","context","tick","font","isArray","longestText","measureText","parseFontOptions","valueOrDefault","globalDefaults","global","size","fontSize","defaultFontSize","style","fontStyle","defaultFontStyle","family","fontFamily","defaultFontFamily","fontString","parseLineHeight","toLineHeight","lineHeight","display","offset","gridLines","lineWidth","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","borderDash","borderDashOffset","scaleLabel","labelString","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","callback","formatters","minor","major","paddingLeft","paddingTop","paddingRight","paddingBottom","getTicks","_ticks","mergeTicksOptions","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","noop","tickOpts","map","userCallback","ctx","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","cos","sin","opts","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","min","firstLabelWidth","lastLabelWidth","handleMargins","getRightValue","rawValue","isNullOrUndef","NaN","getLabelForIndex","getPixelForValue","getValueForPixel","pixel","finalVal","round","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","result","maxTicksLimit","floor","draw","optionMajorTicks","isRotated","tickFontColor","fontColor","defaultFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","zeroLineIndex","valueAtIndexOrDefault","textAlign","textBaseline","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","save","strokeStyle","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","rotate","fillStyle","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","PI","value","linear","tickValue","delta","abs","logDelta","log10","tickString","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","pow","uid","id","Array","toString","call","isObject","defaultValue","fn","args","thisArg","loopable","len","arrayEquals","a0","a1","source","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","process","d","__webpack_exports__","Doughnut","Pie","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5___default","_extends","assign","_objectWithoutProperties","obj","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroy","updateChart","shouldComponentUpdate","nextProps","_props","plugins","legend","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","set","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","dataset","console","error","_this2","configMerge","currentDatasets","config","nextDatasets","currentDatasetsIndexed","next","current","point","pid","otherProps","rest","_props2","node","defaultProps","render","_props3","createElement","onClick","Component","propTypes","oneOfType","object","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","_React$Component2","_this4","_ref","_React$Component3","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","_this10","_ref4","_React$Component6","HorizontalBar","_this12","_ref5","_React$Component7","_this14","_ref6","_React$Component8","_this16","_ref7","_React$Component9","Bubble","_this18","_ref8","_React$Component10","Scatter","_this20","_ref9","Chart","Animation","animationService","elements","Interaction","platform","Scale","scaleService","Tooltip","register","window","Legend","_element","Title","title","pluginService","PluginBase","canvasHelpers","layoutService","convert","string","Color","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","degrees","mixinColor","p","w1","w2","toJSON","slice","spaces","maxes","getValues","space","charAt","capped","chans","sname","svalues","currentStep","numSteps","onAnimationProgress","onAnimationComplete","defineProperty","get","animation","duration","onProgress","onComplete","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","count","getRelativePosition","e","native","parseVisibleItems","handler","meta","j","jlen","isDatasetVisible","getDatasetMeta","skip","getIntersectItems","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","datasetIndex","_index","modes","single","_datasetIndex","x-axis","nearest","ret","getArea","intersectsItem","inXRange","inYRange","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","_plugins","_cacheId","plugin","unregister","idx","clear","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","_invalidate","tooltips","enabled","custom","mode","backgroundColor","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","borderColor","borderWidth","callbacks","beforeTitle","tooltipItems","labelCount","xLabel","afterTitle","beforeBody","beforeLabel","tooltipItem","yLabel","labelColor","labelTextColor","_options","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","el","pos","eventPosition","nearestElement","distanceBetweenPoints","tp","mergeOpacity","colorString","opacity","pushOrConcat","base","toPush","splitNewlines","str","String","split","createTooltipItem","xScale","_xScale","yScale","_yScale","_scale","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getBeforeAfterBodyLines","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","_data","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","filter","itemSort","_chart","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","line","getTooltipSize","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","radius","quadraticCurveTo","closePath","fill","hasTooltipContent","handleEvent","getElementsAtEventForMode","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","animationDuration","defaultColor","showLines","construct","effects","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","clearRect","roundedRect","arcTo","rect","drawPoint","edgeLength","xOffset","yOffset","isNaN","arc","SQRT2","leftX","topY","sideSize","drawImage","clipArea","area","clip","unclipArea","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","matches","match","resolve","inputs","parseMaxStyle","styleValue","parentProperty","valueInPixels","parseInt","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","document","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","slen","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","parseFloat","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","exponent","log","LOG10E","powerOf10","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","nextItem","loop","previousItem","niceNum","range","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","mouseX","mouseY","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","container","parentDimension","parent","host","getMaximumWidth","clientWidth","cw","getMaximumHeight","clientHeight","h","ch","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","textWidth","numberOfLines","CanvasGradient","getHoverColor","colorValue","CanvasPattern","conversions","Converter","arg","pair","exec","from","to","convs","routeSpace","fspace","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","f","q","hwb2rgb","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","lab2lch","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","colorNames","rgba","percentaString","hsla","num","hexDouble","toUpperCase","getRgb","getHsl","getAlpha","reverseNames","name","inLabelRange","hoverRadius","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","borderCapStyle","borderJoinStyle","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","xRange","hitRadius","pointStyle","hoverBorderWidth","isVertical","bar","getBarBounds","halfWidth","halfHeight","rectangle","borderSkipped","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","getContext","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","passive","_addEventListener","listener","_removeEventListener","createEvent","nativeEvent","addResizeListener","expando","resizer","cls","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","keyframes","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","injectCSS","getElementById","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","removeAttribute","proxies","fromNativeEvent","addEvent","removeEvent","positionIsHorizontal","types","instances","initConfig","_bufferedRender","controller","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxes","xAxisOptions","yAxes","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","resetElements","reset","newOptions","updateConfig","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","xAxisID","yAxisID","getVisibleDatasetCount","generateLegend","legendCallback","unbindEvents","toBase64Image","toDataURL","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","updateElement","res","resyncElements","removeHoverStyle","$previousStyle","setHoverStyle","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","LinearScaleBase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","stepSize","fixedStepSize","generationOptions","dataRange","factor","spacing","niceRange","ceil","niceMin","niceMax","numSpaces","generateTicks","end","ticksAsNumbers","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","IDMatches","hasStacks","stacked","stack","valuesPerStack","join","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","tickFontSize","rightValue","innerDimension","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","animate","angleLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","getPointLabelFontOptions","pointLabelOptions","determineLimits","getTextAlignForAngle","text","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","LinearRadialScale","xCenter","yCenter","drawingArea","pointPosition","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","_fit","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","table","skey","tkey","mid","i0","i1","lo","lookup","prev","span","momentify","parser","format","parse","input","time","startOf","valueOf","determineMajorUnit","unit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","milliseconds","determineStepSize","TimeScale","warn","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","determineUnitForFormatting","_majorUnit","distribution","curr","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","substr","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p1","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","date","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","chunk","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","total","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","factory","categoryPercentage","barPercentage","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","percent","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","horizontalBar","dataPoint","bubble","_resolveElementOptions","dsIndex","dataIndex","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","dataLabel","doughnut","pie","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","elementOpts","arcs","hoverWidth","lineEnabled","showLine","lineElementOptions","lineTension","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","getPointRotation","pointRotation","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","controlPoints","capControlPoint","halfBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","datasetStartAngle","resetRadius","radar","pointElementOptions","scatter","PolarArea","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","d0","d1","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","beforeInit","afterEvent","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","iteratee","accumulator","baseEach"],"mappings":"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","file":"static/js/1.98bd1719.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n  /**\n   * @private\n   */\n  _set: function _set(scope, values) {\n    return helpers.merge(this[scope] || (this[scope] = {}), values);\n  }\n};","'use strict';\n\nvar color = require('chartjs-color');\n\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n  var keys = Object.keys(model);\n  var i, ilen, key, actual, origin, target, type, c0, c1;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    target = model[key]; // if a value is added to the model after pivot() has been called, the view\n    // doesn't contain it, so let's initialize the view to the target value.\n\n    if (!view.hasOwnProperty(key)) {\n      view[key] = target;\n    }\n\n    actual = view[key];\n\n    if (actual === target || key[0] === '_') {\n      continue;\n    }\n\n    if (!start.hasOwnProperty(key)) {\n      start[key] = actual;\n    }\n\n    origin = start[key];\n    type = typeof target;\n\n    if (type === typeof origin) {\n      if (type === 'string') {\n        c0 = color(origin);\n\n        if (c0.valid) {\n          c1 = color(target);\n\n          if (c1.valid) {\n            view[key] = c1.mix(c0, ease).rgbString();\n            continue;\n          }\n        }\n      } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n        view[key] = origin + (target - origin) * ease;\n        continue;\n      }\n    }\n\n    view[key] = target;\n  }\n}\n\nvar Element = function Element(configuration) {\n  helpers.extend(this, configuration);\n  this.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n  initialize: function initialize() {\n    this.hidden = false;\n  },\n  pivot: function pivot() {\n    var me = this;\n\n    if (!me._view) {\n      me._view = helpers.clone(me._model);\n    }\n\n    me._start = {};\n    return me;\n  },\n  transition: function transition(ease) {\n    var me = this;\n    var model = me._model;\n    var start = me._start;\n    var view = me._view; // No animation -> No Transition\n\n    if (!model || ease === 1) {\n      me._view = model;\n      me._start = null;\n      return me;\n    }\n\n    if (!view) {\n      view = me._view = {};\n    }\n\n    if (!start) {\n      start = me._start = {};\n    }\n\n    interpolate(start, view, model, ease);\n    return me;\n  },\n  tooltipPosition: function tooltipPosition() {\n    return {\n      x: this._model.x,\n      y: this._model.y\n    };\n  },\n  hasValue: function hasValue() {\n    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n  }\n});\nElement.extend = helpers.inherits;\nmodule.exports = Element;","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n  // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n  // use the new chart options to grab the correct scale\n  constructors: {},\n  // Use a registration function so that we can move to an ES6 map when we no longer need to support\n  // old browsers\n  // Scale config defaults\n  defaults: {},\n  registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n    this.constructors[type] = scaleConstructor;\n    this.defaults[type] = helpers.clone(scaleDefaults);\n  },\n  getScaleConstructor: function getScaleConstructor(type) {\n    return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n  },\n  getScaleDefaults: function getScaleDefaults(type) {\n    // Return the scale defaults merged with the global settings so that we always use the latest ones\n    return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n  },\n  updateScaleDefaults: function updateScaleDefaults(type, additions) {\n    var me = this;\n\n    if (me.defaults.hasOwnProperty(type)) {\n      me.defaults[type] = helpers.extend(me.defaults[type], additions);\n    }\n  },\n  addScalesToLayout: function addScalesToLayout(chart) {\n    // Adds each scale to the chart.boxes array to be sized accordingly\n    helpers.each(chart.scales, function (scale) {\n      // Set ILayoutItem parameters for backwards compatibility\n      scale.fullWidth = scale.options.fullWidth;\n      scale.position = scale.options.position;\n      scale.weight = scale.options.weight;\n      layouts.addBox(chart, scale);\n    });\n  }\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n  return helpers.where(array, function (v) {\n    return v.position === position;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  array.forEach(function (v, i) {\n    v._tmpIndex_ = i;\n    return v;\n  });\n  array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n  });\n  array.forEach(function (v) {\n    delete v._tmpIndex_;\n  });\n}\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\n\n\nmodule.exports = {\n  defaults: {},\n\n  /**\n   * Register a box to a chart.\n   * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n   * @param {Chart} chart - the chart to use\n   * @param {ILayoutItem} item - the item to add to be layed out\n   */\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    } // initialize item with default values\n\n\n    item.fullWidth = item.fullWidth || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    chart.boxes.push(item);\n  },\n\n  /**\n   * Remove a layoutItem from a chart\n   * @param {Chart} chart - the chart to remove the box from\n   * @param {Object} layoutItem - the item to remove from the layout\n   */\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n   * Sets (or updates) options on the given `item`.\n   * @param {Chart} chart - the chart in which the item lives (or will be added to)\n   * @param {Object} item - the item to configure with the given options\n   * @param {Object} options - the new item options.\n   */\n  configure: function configure(chart, item, options) {\n    var props = ['fullWidth', 'position', 'weight'];\n    var ilen = props.length;\n    var i = 0;\n    var prop;\n\n    for (; i < ilen; ++i) {\n      prop = props[i];\n\n      if (options.hasOwnProperty(prop)) {\n        item[prop] = options[prop];\n      }\n    }\n  },\n\n  /**\n   * Fits boxes of the given chart into the given size by having each box measure itself\n   * then running a fitting algorithm\n   * @param {Chart} chart - the chart\n   * @param {Number} width - the width to fit into\n   * @param {Number} height - the height to fit into\n   */\n  update: function update(chart, width, height) {\n    if (!chart) {\n      return;\n    }\n\n    var layoutOptions = chart.options.layout || {};\n    var padding = helpers.options.toPadding(layoutOptions.padding);\n    var leftPadding = padding.left;\n    var rightPadding = padding.right;\n    var topPadding = padding.top;\n    var bottomPadding = padding.bottom;\n    var leftBoxes = filterByPosition(chart.boxes, 'left');\n    var rightBoxes = filterByPosition(chart.boxes, 'right');\n    var topBoxes = filterByPosition(chart.boxes, 'top');\n    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n    sortByWeight(leftBoxes, true);\n    sortByWeight(rightBoxes, false);\n    sortByWeight(topBoxes, true);\n    sortByWeight(bottomBoxes, false); // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n    // What we do to find the best sizing, we do the following\n    // 1. Determine the minimum size of the chart area.\n    // 2. Split the remaining width equally between each vertical axis\n    // 3. Split the remaining height equally between each horizontal axis\n    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n    // 5. Adjust the sizes of each axis based on it's minimum reported size.\n    // 6. Refit each axis\n    // 7. Position each axis in the final location\n    // 8. Tell the chart the final location of the chart area\n    // 9. Tell any axes that overlay the chart area the positions of the chart area\n    // Step 1\n\n    var chartWidth = width - leftPadding - rightPadding;\n    var chartHeight = height - topPadding - bottomPadding;\n    var chartAreaWidth = chartWidth / 2; // min 50%\n\n    var chartAreaHeight = chartHeight / 2; // min 50%\n    // Step 2\n\n    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length); // Step 3\n\n    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length); // Step 4\n\n    var maxChartAreaWidth = chartWidth;\n    var maxChartAreaHeight = chartHeight;\n    var minBoxSizes = [];\n\n    function getMinimumBoxSize(box) {\n      var minSize;\n      var isHorizontal = box.isHorizontal();\n\n      if (isHorizontal) {\n        minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n        maxChartAreaHeight -= minSize.height;\n      } else {\n        minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n        maxChartAreaWidth -= minSize.width;\n      }\n\n      minBoxSizes.push({\n        horizontal: isHorizontal,\n        minSize: minSize,\n        box: box\n      });\n    }\n\n    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n    var maxHorizontalLeftPadding = 0;\n    var maxHorizontalRightPadding = 0;\n    var maxVerticalTopPadding = 0;\n    var maxVerticalBottomPadding = 0;\n    helpers.each(topBoxes.concat(bottomBoxes), function (horizontalBox) {\n      if (horizontalBox.getPadding) {\n        var boxPadding = horizontalBox.getPadding();\n        maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n        maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n      }\n    });\n    helpers.each(leftBoxes.concat(rightBoxes), function (verticalBox) {\n      if (verticalBox.getPadding) {\n        var boxPadding = verticalBox.getPadding();\n        maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n        maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n      }\n    }); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n    // be if the axes are drawn at their minimum sizes.\n    // Steps 5 & 6\n\n    var totalLeftBoxesWidth = leftPadding;\n    var totalRightBoxesWidth = rightPadding;\n    var totalTopBoxesHeight = topPadding;\n    var totalBottomBoxesHeight = bottomPadding; // Function to fit a box\n\n    function fitBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {\n        return minBox.box === box;\n      });\n\n      if (minBoxSize) {\n        if (box.isHorizontal()) {\n          var scaleMargin = {\n            left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n            right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n            top: 0,\n            bottom: 0\n          }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n          // on the margin. Sometimes they need to increase in size slightly\n\n          box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n        } else {\n          box.update(minBoxSize.minSize.width, maxChartAreaHeight);\n        }\n      }\n    } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    }); // Set the Left and Right margins for the horizontal boxes\n\n    helpers.each(topBoxes.concat(bottomBoxes), fitBox); // Figure out how much margin is on the top and bottom of the vertical boxes\n\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    });\n\n    function finalFitVerticalBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {\n        return minSize.box === box;\n      });\n      var scaleMargin = {\n        left: 0,\n        right: 0,\n        top: totalTopBoxesHeight,\n        bottom: totalBottomBoxesHeight\n      };\n\n      if (minBoxSize) {\n        box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n      }\n    } // Let the left layout know the final margin\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n    totalLeftBoxesWidth = leftPadding;\n    totalRightBoxesWidth = rightPadding;\n    totalTopBoxesHeight = topPadding;\n    totalBottomBoxesHeight = bottomPadding;\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    });\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    }); // We may be adding some padding to account for rotated x axis labels\n\n    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n    totalLeftBoxesWidth += leftPaddingAddition;\n    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n    totalTopBoxesHeight += topPaddingAddition;\n    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n    // without calling `fit` again\n\n    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n      helpers.each(leftBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(rightBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(topBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      helpers.each(bottomBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      maxChartAreaHeight = newMaxChartAreaHeight;\n      maxChartAreaWidth = newMaxChartAreaWidth;\n    } // Step 7 - Position the boxes\n\n\n    var left = leftPadding + leftPaddingAddition;\n    var top = topPadding + topPaddingAddition;\n\n    function placeBox(box) {\n      if (box.isHorizontal()) {\n        box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n        box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n        box.top = top;\n        box.bottom = top + box.height; // Move to next point\n\n        top = box.bottom;\n      } else {\n        box.left = left;\n        box.right = left + box.width;\n        box.top = totalTopBoxesHeight;\n        box.bottom = totalTopBoxesHeight + maxChartAreaHeight; // Move to next point\n\n        left = box.right;\n      }\n    }\n\n    helpers.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n    left += maxChartAreaWidth;\n    top += maxChartAreaHeight;\n    helpers.each(rightBoxes, placeBox);\n    helpers.each(bottomBoxes, placeBox); // Step 8\n\n    chart.chartArea = {\n      left: totalLeftBoxesWidth,\n      top: totalTopBoxesHeight,\n      right: totalLeftBoxesWidth + maxChartAreaWidth,\n      bottom: totalTopBoxesHeight + maxChartAreaHeight\n    }; // Step 9\n\n    helpers.each(chartAreaBoxes, function (box) {\n      box.left = chart.chartArea.left;\n      box.top = chart.chartArea.top;\n      box.right = chart.chartArea.right;\n      box.bottom = chart.chartArea.bottom;\n      box.update(maxChartAreaWidth, maxChartAreaHeight);\n    });\n  }\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n  display: true,\n  position: 'left',\n  offset: false,\n  // grid line settings\n  gridLines: {\n    display: true,\n    color: 'rgba(0, 0, 0, 0.1)',\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickMarkLength: 10,\n    zeroLineWidth: 1,\n    zeroLineColor: 'rgba(0,0,0,0.25)',\n    zeroLineBorderDash: [],\n    zeroLineBorderDashOffset: 0.0,\n    offsetGridLines: false,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  // scale label\n  scaleLabel: {\n    // display property\n    display: false,\n    // actual label\n    labelString: '',\n    // line height\n    lineHeight: 1.2,\n    // top/bottom padding\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  // label settings\n  ticks: {\n    beginAtZero: false,\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    padding: 0,\n    reverse: false,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 0,\n    labelOffset: 0,\n    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {}\n  }\n});\n\nfunction labelsFromTicks(ticks) {\n  var labels = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    labels.push(ticks[i].label);\n  }\n\n  return labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n  var lineValue = scale.getPixelForTick(index);\n\n  if (offsetGridLines) {\n    if (index === 0) {\n      lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n  return helpers.isArray(tick) ? helpers.longestText(context, font, tick) : context.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n  var valueOrDefault = helpers.valueOrDefault;\n  var globalDefaults = defaults.global;\n  var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n  var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n  var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n  return {\n    size: size,\n    style: style,\n    family: family,\n    font: helpers.fontString(size, style, family)\n  };\n}\n\nfunction parseLineHeight(options) {\n  return helpers.options.toLineHeight(helpers.valueOrDefault(options.lineHeight, 1.2), helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n  /**\n   * Get the padding needed for the scale\n   * @method getPadding\n   * @private\n   * @returns {Padding} the necessary padding\n   */\n  getPadding: function getPadding() {\n    var me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  },\n\n  /**\n   * Returns the scale tick objects ({label, major})\n   * @since 2.7\n   */\n  getTicks: function getTicks() {\n    return this._ticks;\n  },\n  // These methods are ordered by lifecyle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n  mergeTicksOptions: function mergeTicksOptions() {\n    var ticks = this.options.ticks;\n\n    if (ticks.minor === false) {\n      ticks.minor = {\n        display: false\n      };\n    }\n\n    if (ticks.major === false) {\n      ticks.major = {\n        display: false\n      };\n    }\n\n    for (var key in ticks) {\n      if (key !== 'major' && key !== 'minor') {\n        if (typeof ticks.minor[key] === 'undefined') {\n          ticks.minor[key] = ticks[key];\n        }\n\n        if (typeof ticks.major[key] === 'undefined') {\n          ticks.major[key] = ticks[key];\n        }\n      }\n    }\n  },\n  beforeUpdate: function beforeUpdate() {\n    helpers.callback(this.options.beforeUpdate, [this]);\n  },\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this;\n    var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = helpers.extend({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Data min/max\n\n    me.beforeDataLimits();\n    me.determineDataLimits();\n    me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n    // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n    // and must not be accessed directly from outside this class. `this.ticks` being\n    // around for long time and not marked as private, we can't change its structure\n    // without unexpected breaking changes. If you need to access the scale ticks,\n    // use scale.getTicks() instead.\n\n    me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n    // we still support no return (`this.ticks` internally set by calling this method).\n\n    ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n    // COMPAT, we still support no return (`this.ticks` internally changed by calling\n    // this method and supposed to contain only string values).\n\n    labels = me.convertTicksToLabels(ticks) || me.ticks;\n    me.afterTickToLabelConversion();\n    me.ticks = labels; // BACKWARD COMPATIBILITY\n    // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n    // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      tick = ticks[i];\n\n      if (!tick) {\n        ticks.push(tick = {\n          label: label,\n          major: false\n        });\n      } else {\n        tick.label = label;\n      }\n    }\n\n    me._ticks = ticks; // Tick Rotation\n\n    me.beforeCalculateTickRotation();\n    me.calculateTickRotation();\n    me.afterCalculateTickRotation(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: function afterUpdate() {\n    helpers.callback(this.options.afterUpdate, [this]);\n  },\n  //\n  beforeSetDimensions: function beforeSetDimensions() {\n    helpers.callback(this.options.beforeSetDimensions, [this]);\n  },\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  },\n  afterSetDimensions: function afterSetDimensions() {\n    helpers.callback(this.options.afterSetDimensions, [this]);\n  },\n  // Data limits\n  beforeDataLimits: function beforeDataLimits() {\n    helpers.callback(this.options.beforeDataLimits, [this]);\n  },\n  determineDataLimits: helpers.noop,\n  afterDataLimits: function afterDataLimits() {\n    helpers.callback(this.options.afterDataLimits, [this]);\n  },\n  //\n  beforeBuildTicks: function beforeBuildTicks() {\n    helpers.callback(this.options.beforeBuildTicks, [this]);\n  },\n  buildTicks: helpers.noop,\n  afterBuildTicks: function afterBuildTicks() {\n    helpers.callback(this.options.afterBuildTicks, [this]);\n  },\n  beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n    helpers.callback(this.options.beforeTickToLabelConversion, [this]);\n  },\n  convertTicksToLabels: function convertTicksToLabels() {\n    var me = this; // Convert ticks to strings\n\n    var tickOpts = me.options.ticks;\n    me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n  },\n  afterTickToLabelConversion: function afterTickToLabelConversion() {\n    helpers.callback(this.options.afterTickToLabelConversion, [this]);\n  },\n  //\n  beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n    helpers.callback(this.options.beforeCalculateTickRotation, [this]);\n  },\n  calculateTickRotation: function calculateTickRotation() {\n    var me = this;\n    var context = me.ctx;\n    var tickOpts = me.options.ticks;\n    var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n    // between x offsets between 0 and 1.\n\n    var tickFont = parseFontOptions(tickOpts);\n    context.font = tickFont.font;\n    var labelRotation = tickOpts.minRotation || 0;\n\n    if (labels.length && me.options.display && me.isHorizontal()) {\n      var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n      var labelWidth = originalLabelWidth;\n      var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n      var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n      while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n        var angleRadians = helpers.toRadians(labelRotation);\n        cosRotation = Math.cos(angleRadians);\n        sinRotation = Math.sin(angleRadians);\n\n        if (sinRotation * originalLabelWidth > me.maxHeight) {\n          // go back one step\n          labelRotation--;\n          break;\n        }\n\n        labelRotation++;\n        labelWidth = cosRotation * originalLabelWidth;\n      }\n    }\n\n    me.labelRotation = labelRotation;\n  },\n  afterCalculateTickRotation: function afterCalculateTickRotation() {\n    helpers.callback(this.options.afterCalculateTickRotation, [this]);\n  },\n  //\n  beforeFit: function beforeFit() {\n    helpers.callback(this.options.beforeFit, [this]);\n  },\n  fit: function fit() {\n    var me = this; // Reset\n\n    var minSize = me.minSize = {\n      width: 0,\n      height: 0\n    };\n    var labels = labelsFromTicks(me._ticks);\n    var opts = me.options;\n    var tickOpts = opts.ticks;\n    var scaleLabelOpts = opts.scaleLabel;\n    var gridLineOpts = opts.gridLines;\n    var display = opts.display;\n    var isHorizontal = me.isHorizontal();\n    var tickFont = parseFontOptions(tickOpts);\n    var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n    if (isHorizontal) {\n      // subtract the margins to line up with the chartArea if we are a full width scale\n      minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n    } else {\n      minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } // height\n\n\n    if (isHorizontal) {\n      minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } else {\n      minSize.height = me.maxHeight; // fill all the height\n    } // Are we showing a title for the scale?\n\n\n    if (scaleLabelOpts.display && display) {\n      var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n      var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n      var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n      if (isHorizontal) {\n        minSize.height += deltaHeight;\n      } else {\n        minSize.width += deltaHeight;\n      }\n    } // Don't bother fitting the ticks if we are not showing them\n\n\n    if (tickOpts.display && display) {\n      var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n      var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n      var lineSpace = tickFont.size * 0.5;\n      var tickPadding = me.options.ticks.padding;\n\n      if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n        me.longestLabelWidth = largestTextWidth;\n        var angleRadians = helpers.toRadians(me.labelRotation);\n        var cosRotation = Math.cos(angleRadians);\n        var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n        var labelHeight = sinRotation * largestTextWidth + tickFont.size * tallestLabelHeightInLines + lineSpace * (tallestLabelHeightInLines - 1) + lineSpace; // padding\n\n        minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        me.ctx.font = tickFont.font;\n        var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n        var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font); // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n        // which means that the right padding is dominated by the font height\n\n        if (me.labelRotation !== 0) {\n          me.paddingLeft = opts.position === 'bottom' ? cosRotation * firstLabelWidth + 3 : cosRotation * lineSpace + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = opts.position === 'bottom' ? cosRotation * lineSpace + 3 : cosRotation * lastLabelWidth + 3;\n        } else {\n          me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = lastLabelWidth / 2 + 3;\n        }\n      } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n        if (tickOpts.mirror) {\n          largestTextWidth = 0;\n        } else {\n          // use lineSpace for consistency with horizontal axis\n          // tickPadding is not implemented for horizontal\n          largestTextWidth += tickPadding + lineSpace;\n        }\n\n        minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n        me.paddingTop = tickFont.size / 2;\n        me.paddingBottom = tickFont.size / 2;\n      }\n    }\n\n    me.handleMargins();\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n\n  /**\n   * Handle margins and padding interactions\n   * @private\n   */\n  handleMargins: function handleMargins() {\n    var me = this;\n\n    if (me.margins) {\n      me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n      me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n      me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n      me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n    }\n  },\n  afterFit: function afterFit() {\n    helpers.callback(this.options.afterFit, [this]);\n  },\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  isFullWidth: function isFullWidth() {\n    return this.options.fullWidth;\n  },\n  // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n  getRightValue: function getRightValue(rawValue) {\n    // Null and undefined values first\n    if (helpers.isNullOrUndef(rawValue)) {\n      return NaN;\n    } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n    if (typeof rawValue === 'number' && !isFinite(rawValue)) {\n      return NaN;\n    } // If it is in fact an object, dive in one more level\n\n\n    if (rawValue) {\n      if (this.isHorizontal()) {\n        if (rawValue.x !== undefined) {\n          return this.getRightValue(rawValue.x);\n        }\n      } else if (rawValue.y !== undefined) {\n        return this.getRightValue(rawValue.y);\n      }\n    } // Value is good, return it\n\n\n    return rawValue;\n  },\n\n  /**\n   * Used to get the value to display in the tooltip for the data at the given index\n   * @param index\n   * @param datasetIndex\n   */\n  getLabelForIndex: helpers.noop,\n\n  /**\n   * Returns the location of the given data point. Value can either be an index or a numerical value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param value\n   * @param index\n   * @param datasetIndex\n   */\n  getPixelForValue: helpers.noop,\n\n  /**\n   * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param pixel\n   */\n  getValueForPixel: helpers.noop,\n\n  /**\n   * Returns the location of the tick at the given index\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForTick: function getPixelForTick(index) {\n    var me = this;\n    var offset = me.options.offset;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var pixel = tickWidth * index + me.paddingLeft;\n\n      if (offset) {\n        pixel += tickWidth / 2;\n      }\n\n      var finalVal = me.left + Math.round(pixel);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n    return me.top + index * (innerHeight / (me._ticks.length - 1));\n  },\n\n  /**\n   * Utility for getting the pixel location of a percentage of scale\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForDecimal: function getPixelForDecimal(decimal) {\n    var me = this;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var valueOffset = innerWidth * decimal + me.paddingLeft;\n      var finalVal = me.left + Math.round(valueOffset);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    return me.top + decimal * me.height;\n  },\n\n  /**\n   * Returns the pixel for the minimum chart value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getBasePixel: function getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  },\n  getBaseValue: function getBaseValue() {\n    var me = this;\n    var min = me.min;\n    var max = me.max;\n    return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  },\n\n  /**\n   * Returns a subset of ticks to be plotted to avoid overlapping labels.\n   * @private\n   */\n  _autoSkip: function _autoSkip(ticks) {\n    var skipRatio;\n    var me = this;\n    var isHorizontal = me.isHorizontal();\n    var optionTicks = me.options.ticks.minor;\n    var tickCount = ticks.length;\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var cosRotation = Math.cos(labelRotationRadians);\n    var longestRotatedLabel = me.longestLabelWidth * cosRotation;\n    var result = [];\n    var i, tick, shouldSkip; // figure out the maximum number of gridlines to show\n\n    var maxTicks;\n\n    if (optionTicks.maxTicksLimit) {\n      maxTicks = optionTicks.maxTicksLimit;\n    }\n\n    if (isHorizontal) {\n      skipRatio = false;\n\n      if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > me.width - (me.paddingLeft + me.paddingRight)) {\n        skipRatio = 1 + Math.floor((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount / (me.width - (me.paddingLeft + me.paddingRight)));\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (maxTicks && tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n      }\n    }\n\n    for (i = 0; i < tickCount; i++) {\n      tick = ticks[i]; // Since we always show the last tick,we need may need to hide the last shown one before\n\n      shouldSkip = skipRatio > 1 && i % skipRatio > 0 || i % skipRatio === 0 && i + skipRatio >= tickCount;\n\n      if (shouldSkip && i !== tickCount - 1) {\n        // leave tick in place but make sure it's not displayed (#4635)\n        delete tick.label;\n      }\n\n      result.push(tick);\n    }\n\n    return result;\n  },\n  // Actually draw the scale on the canvas\n  // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n  draw: function draw(chartArea) {\n    var me = this;\n    var options = me.options;\n\n    if (!options.display) {\n      return;\n    }\n\n    var context = me.ctx;\n    var globalDefaults = defaults.global;\n    var optionTicks = options.ticks.minor;\n    var optionMajorTicks = options.ticks.major || optionTicks;\n    var gridLines = options.gridLines;\n    var scaleLabel = options.scaleLabel;\n    var isRotated = me.labelRotation !== 0;\n    var isHorizontal = me.isHorizontal();\n    var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n    var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n    var tickFont = parseFontOptions(optionTicks);\n    var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n    var majorTickFont = parseFontOptions(optionMajorTicks);\n    var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n    var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n    var scaleLabelFont = parseFontOptions(scaleLabel);\n    var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var itemsToDraw = [];\n    var axisWidth = me.options.gridLines.lineWidth;\n    var xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n    var xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n    var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n    var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n    helpers.each(ticks, function (tick, index) {\n      // autoskipper skipped this tick (#4635)\n      if (helpers.isNullOrUndef(tick.label)) {\n        return;\n      }\n\n      var label = tick.label;\n      var lineWidth, lineColor, borderDash, borderDashOffset;\n\n      if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n        // Draw the first index specially\n        lineWidth = gridLines.zeroLineWidth;\n        lineColor = gridLines.zeroLineColor;\n        borderDash = gridLines.zeroLineBorderDash;\n        borderDashOffset = gridLines.zeroLineBorderDashOffset;\n      } else {\n        lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n        lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n        borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n        borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n      } // Common properties\n\n\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n      var textAlign = 'middle';\n      var textBaseline = 'middle';\n      var tickPadding = optionTicks.padding;\n\n      if (isHorizontal) {\n        var labelYOffset = tl + tickPadding;\n\n        if (options.position === 'bottom') {\n          // bottom\n          textBaseline = !isRotated ? 'top' : 'middle';\n          textAlign = !isRotated ? 'center' : 'right';\n          labelY = me.top + labelYOffset;\n        } else {\n          // top\n          textBaseline = !isRotated ? 'bottom' : 'middle';\n          textAlign = !isRotated ? 'center' : 'left';\n          labelY = me.bottom - labelYOffset;\n        }\n\n        var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (xLineValue < me.left) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        xLineValue += helpers.aliasPixel(lineWidth);\n        labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n        tx1 = tx2 = x1 = x2 = xLineValue;\n        ty1 = yTickStart;\n        ty2 = yTickEnd;\n        y1 = chartArea.top;\n        y2 = chartArea.bottom + axisWidth;\n      } else {\n        var isLeft = options.position === 'left';\n        var labelXOffset;\n\n        if (optionTicks.mirror) {\n          textAlign = isLeft ? 'left' : 'right';\n          labelXOffset = tickPadding;\n        } else {\n          textAlign = isLeft ? 'right' : 'left';\n          labelXOffset = tl + tickPadding;\n        }\n\n        labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n        var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (yLineValue < me.top) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        yLineValue += helpers.aliasPixel(lineWidth);\n        labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n        tx1 = xTickStart;\n        tx2 = xTickEnd;\n        x1 = chartArea.left;\n        x2 = chartArea.right + axisWidth;\n        ty1 = ty2 = y1 = y2 = yLineValue;\n      }\n\n      itemsToDraw.push({\n        tx1: tx1,\n        ty1: ty1,\n        tx2: tx2,\n        ty2: ty2,\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        labelX: labelX,\n        labelY: labelY,\n        glWidth: lineWidth,\n        glColor: lineColor,\n        glBorderDash: borderDash,\n        glBorderDashOffset: borderDashOffset,\n        rotation: -1 * labelRotationRadians,\n        label: label,\n        major: tick.major,\n        textBaseline: textBaseline,\n        textAlign: textAlign\n      });\n    }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n    helpers.each(itemsToDraw, function (itemToDraw) {\n      if (gridLines.display) {\n        context.save();\n        context.lineWidth = itemToDraw.glWidth;\n        context.strokeStyle = itemToDraw.glColor;\n\n        if (context.setLineDash) {\n          context.setLineDash(itemToDraw.glBorderDash);\n          context.lineDashOffset = itemToDraw.glBorderDashOffset;\n        }\n\n        context.beginPath();\n\n        if (gridLines.drawTicks) {\n          context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n          context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n        }\n\n        if (gridLines.drawOnChartArea) {\n          context.moveTo(itemToDraw.x1, itemToDraw.y1);\n          context.lineTo(itemToDraw.x2, itemToDraw.y2);\n        }\n\n        context.stroke();\n        context.restore();\n      }\n\n      if (optionTicks.display) {\n        // Make sure we draw text in the correct color and font\n        context.save();\n        context.translate(itemToDraw.labelX, itemToDraw.labelY);\n        context.rotate(itemToDraw.rotation);\n        context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n        context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n        context.textBaseline = itemToDraw.textBaseline;\n        context.textAlign = itemToDraw.textAlign;\n        var label = itemToDraw.label;\n\n        if (helpers.isArray(label)) {\n          var lineCount = label.length;\n          var lineHeight = tickFont.size * 1.5;\n          var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n          for (var i = 0; i < lineCount; ++i) {\n            // We just make sure the multiline element is a string here..\n            context.fillText('' + label[i], 0, y); // apply same lineSpacing as calculated @ L#320\n\n            y += lineHeight;\n          }\n        } else {\n          context.fillText(label, 0, 0);\n        }\n\n        context.restore();\n      }\n    });\n\n    if (scaleLabel.display) {\n      // Draw the scale label\n      var scaleLabelX;\n      var scaleLabelY;\n      var rotation = 0;\n      var halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n      if (isHorizontal) {\n        scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n        scaleLabelY = options.position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n      } else {\n        var isLeft = options.position === 'left';\n        scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n        scaleLabelY = me.top + (me.bottom - me.top) / 2;\n        rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n      }\n\n      context.save();\n      context.translate(scaleLabelX, scaleLabelY);\n      context.rotate(rotation);\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n      context.font = scaleLabelFont.font;\n      context.fillText(scaleLabel.labelString, 0, 0);\n      context.restore();\n    }\n\n    if (gridLines.drawBorder) {\n      // Draw the line at the edge of the axis\n      context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n      context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n      var x1 = me.left;\n      var x2 = me.right + axisWidth;\n      var y1 = me.top;\n      var y2 = me.bottom + axisWidth;\n      var aliasPixel = helpers.aliasPixel(context.lineWidth);\n\n      if (isHorizontal) {\n        y1 = y2 = options.position === 'top' ? me.bottom : me.top;\n        y1 += aliasPixel;\n        y2 += aliasPixel;\n      } else {\n        x1 = x2 = options.position === 'left' ? me.right : me.left;\n        x1 += aliasPixel;\n        x2 += aliasPixel;\n      }\n\n      context.beginPath();\n      context.moveTo(x1, y1);\n      context.lineTo(x2, y2);\n      context.stroke();\n    }\n  }\n});","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\n\n\nmodule.exports = {\n  /**\n   * Namespace to hold formatters for different types of ticks\n   * @namespace Chart.Ticks.formatters\n   */\n  formatters: {\n    /**\n     * Formatter for value labels\n     * @method Chart.Ticks.formatters.values\n     * @param value the value to display\n     * @return {String|Array} the label to display\n     */\n    values: function values(value) {\n      return helpers.isArray(value) ? value : '' + value;\n    },\n\n    /**\n     * Formatter for linear numeric ticks\n     * @method Chart.Ticks.formatters.linear\n     * @param tickValue {Number} the value to be formatted\n     * @param index {Number} the position of the tickValue parameter in the ticks array\n     * @param ticks {Array<Number>} the list of ticks being converted\n     * @return {String} string representation of the tickValue parameter\n     */\n    linear: function linear(tickValue, index, ticks) {\n      // If we have lots of ticks, don't use the ones\n      var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n      if (Math.abs(delta) > 1) {\n        if (tickValue !== Math.floor(tickValue)) {\n          // not an integer\n          delta = tickValue - Math.floor(tickValue);\n        }\n      }\n\n      var logDelta = helpers.log10(Math.abs(delta));\n      var tickString = '';\n\n      if (tickValue !== 0) {\n        var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n        if (maxTick < 1e-4) {\n          // all ticks are small numbers; use scientific notation\n          var logTick = helpers.log10(Math.abs(tickValue));\n          tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n        } else {\n          var numDecimal = -1 * Math.floor(logDelta);\n          numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n          tickString = tickValue.toFixed(numDecimal);\n        }\n      } else {\n        tickString = '0'; // never show decimal places for 0\n      }\n\n      return tickString;\n    },\n    logarithmic: function logarithmic(tickValue, index, ticks) {\n      var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));\n\n      if (tickValue === 0) {\n        return '0';\n      } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n        return tickValue.toExponential();\n      }\n\n      return '';\n    }\n  }\n};","'use strict';\n/**\n * @namespace Chart.helpers\n */\n\nvar helpers = {\n  /**\n   * An empty function that can be used, for example, for optional callback.\n   */\n  noop: function noop() {},\n\n  /**\n   * Returns a unique id, sequentially generated from a global variable.\n   * @returns {Number}\n   * @function\n   */\n  uid: function () {\n    var id = 0;\n    return function () {\n      return id++;\n    };\n  }(),\n\n  /**\n   * Returns true if `value` is neither null nor undefined, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isNullOrUndef: function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  },\n\n  /**\n   * Returns true if `value` is an array, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @function\n   */\n  isArray: Array.isArray ? Array.isArray : function (value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  /**\n   * Returns true if `value` is an object (excluding null), else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isObject: function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  },\n\n  /**\n   * Returns `value` if defined, else returns `defaultValue`.\n   * @param {*} value - The value to return if defined.\n   * @param {*} defaultValue - The value to return if `value` is undefined.\n   * @returns {*}\n   */\n  valueOrDefault: function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  },\n\n  /**\n   * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n   * @param {Array} value - The array to lookup for value at `index`.\n   * @param {Number} index - The index in `value` to lookup for value.\n   * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n   * @returns {*}\n   */\n  valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n  },\n\n  /**\n   * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n   * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n   * @param {Function} fn - The function to call.\n   * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @returns {*}\n   */\n  callback: function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  },\n\n  /**\n   * Note(SB) for performance sake, this method should only be used when loopable type\n   * is unknown or in none intensive code (not called often and small loopable). Else\n   * it's preferable to use a regular for() loop and save extra function calls.\n   * @param {Object|Array} loopable - The object or array to be iterated.\n   * @param {Function} fn - The function to call for each item.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n   */\n  each: function each(loopable, fn, thisArg, reverse) {\n    var i, len, keys;\n\n    if (helpers.isArray(loopable)) {\n      len = loopable.length;\n\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (helpers.isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  },\n\n  /**\n   * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n   * @see http://stackoverflow.com/a/14853974\n   * @param {Array} a0 - The array to compare\n   * @param {Array} a1 - The array to compare\n   * @returns {Boolean}\n   */\n  arrayEquals: function arrayEquals(a0, a1) {\n    var i, ilen, v0, v1;\n\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n\n      if (v0 instanceof Array && v1 instanceof Array) {\n        if (!helpers.arrayEquals(v0, v1)) {\n          return false;\n        }\n      } else if (v0 !== v1) {\n        // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns a deep copy of `source` without keeping references on objects and arrays.\n   * @param {*} source - The value to clone.\n   * @returns {*}\n   */\n  clone: function clone(source) {\n    if (helpers.isArray(source)) {\n      return source.map(helpers.clone);\n    }\n\n    if (helpers.isObject(source)) {\n      var target = {};\n      var keys = Object.keys(source);\n      var klen = keys.length;\n      var k = 0;\n\n      for (; k < klen; ++k) {\n        target[keys[k]] = helpers.clone(source[keys[k]]);\n      }\n\n      return target;\n    }\n\n    return source;\n  },\n\n  /**\n   * The default merger when Chart.helpers.merge is called without merger option.\n   * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n   * @private\n   */\n  _merger: function _merger(key, target, source, options) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.merge(tval, sval, options);\n    } else {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Merges source[key] in target[key] only if target[key] is undefined.\n   * @private\n   */\n  _mergerIf: function _mergerIf(key, target, source) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.mergeIf(tval, sval);\n    } else if (!target.hasOwnProperty(key)) {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` with the given `options`.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @param {Object} [options] - Merging options:\n   * @param {Function} [options.merger] - The merge method (key, target, source, options)\n   * @returns {Object} The `target` object.\n   */\n  merge: function merge(target, source, options) {\n    var sources = helpers.isArray(source) ? source : [source];\n    var ilen = sources.length;\n    var merge, i, keys, klen, k;\n\n    if (!helpers.isObject(target)) {\n      return target;\n    }\n\n    options = options || {};\n    merge = options.merger || helpers._merger;\n\n    for (i = 0; i < ilen; ++i) {\n      source = sources[i];\n\n      if (!helpers.isObject(source)) {\n        continue;\n      }\n\n      keys = Object.keys(source);\n\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        merge(keys[k], target, source, options);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @returns {Object} The `target` object.\n   */\n  mergeIf: function mergeIf(target, source) {\n    return helpers.merge(target, source, {\n      merger: helpers._mergerIf\n    });\n  },\n\n  /**\n   * Applies the contents of two or more objects together into the first object.\n   * @param {Object} target - The target object in which all objects are merged into.\n   * @param {Object} arg1 - Object containing additional properties to merge in target.\n   * @param {Object} argN - Additional objects containing properties to merge in target.\n   * @returns {Object} The `target` object.\n   */\n  extend: function extend(target) {\n    var setFn = function setFn(value, key) {\n      target[key] = value;\n    };\n\n    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n      helpers.each(arguments[i], setFn);\n    }\n\n    return target;\n  },\n\n  /**\n   * Basic javascript inheritance based on the model created in Backbone.js\n   */\n  inherits: function inherits(extensions) {\n    var me = this;\n    var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n      return me.apply(this, arguments);\n    };\n\n    var Surrogate = function Surrogate() {\n      this.constructor = ChartElement;\n    };\n\n    Surrogate.prototype = me.prototype;\n    ChartElement.prototype = new Surrogate();\n    ChartElement.extend = helpers.inherits;\n\n    if (extensions) {\n      helpers.extend(ChartElement.prototype, extensions);\n    }\n\n    ChartElement.__super__ = me.prototype;\n    return ChartElement;\n  }\n};\nmodule.exports = helpers; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.callCallback = helpers.callback;\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.indexOf = function (array, item, fromIndex) {\n  return Array.prototype.indexOf.call(array, item, fromIndex);\n};\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\n\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index'); // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\n\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\n\nrequire('./scales/scale.category')(Chart);\n\nrequire('./scales/scale.linear')(Chart);\n\nrequire('./scales/scale.logarithmic')(Chart);\n\nrequire('./scales/scale.radialLinear')(Chart);\n\nrequire('./scales/scale.time')(Chart); // Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n\n\nrequire('./controllers/controller.bar')(Chart);\n\nrequire('./controllers/controller.bubble')(Chart);\n\nrequire('./controllers/controller.doughnut')(Chart);\n\nrequire('./controllers/controller.line')(Chart);\n\nrequire('./controllers/controller.polarArea')(Chart);\n\nrequire('./controllers/controller.radar')(Chart);\n\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\n\nrequire('./charts/Chart.Bubble')(Chart);\n\nrequire('./charts/Chart.Doughnut')(Chart);\n\nrequire('./charts/Chart.Line')(Chart);\n\nrequire('./charts/Chart.PolarArea')(Chart);\n\nrequire('./charts/Chart.Radar')(Chart);\n\nrequire('./charts/Chart.Scatter')(Chart); // Loading built-in plugins\n\n\nvar plugins = require('./plugins');\n\nfor (var k in plugins) {\n  if (plugins.hasOwnProperty(k)) {\n    Chart.plugins.register(plugins[k]);\n  }\n}\n\nChart.platform.initialize();\nmodule.exports = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n} // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\n\nChart.Legend = plugins.legend._element;\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.Title = plugins.title._element;\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.pluginService = Chart.plugins;\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\n\nChart.PluginBase = Chart.Element.extend({});\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nChart.canvasHelpers = Chart.helpers.canvas;\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\n\nChart.layoutService = Chart.layouts;","/* MIT license */\nvar convert = require('color-convert');\n\nvar string = require('chartjs-color-string');\n\nvar Color = function Color(obj) {\n  if (obj instanceof Color) {\n    return obj;\n  }\n\n  if (!(this instanceof Color)) {\n    return new Color(obj);\n  }\n\n  this.valid = false;\n  this.values = {\n    rgb: [0, 0, 0],\n    hsl: [0, 0, 0],\n    hsv: [0, 0, 0],\n    hwb: [0, 0, 0],\n    cmyk: [0, 0, 0, 0],\n    alpha: 1\n  }; // parse Color() argument\n\n  var vals;\n\n  if (typeof obj === 'string') {\n    vals = string.getRgba(obj);\n\n    if (vals) {\n      this.setValues('rgb', vals);\n    } else if (vals = string.getHsla(obj)) {\n      this.setValues('hsl', vals);\n    } else if (vals = string.getHwb(obj)) {\n      this.setValues('hwb', vals);\n    }\n  } else if (typeof obj === 'object') {\n    vals = obj;\n\n    if (vals.r !== undefined || vals.red !== undefined) {\n      this.setValues('rgb', vals);\n    } else if (vals.l !== undefined || vals.lightness !== undefined) {\n      this.setValues('hsl', vals);\n    } else if (vals.v !== undefined || vals.value !== undefined) {\n      this.setValues('hsv', vals);\n    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n      this.setValues('hwb', vals);\n    } else if (vals.c !== undefined || vals.cyan !== undefined) {\n      this.setValues('cmyk', vals);\n    }\n  }\n};\n\nColor.prototype = {\n  isValid: function isValid() {\n    return this.valid;\n  },\n  rgb: function rgb() {\n    return this.setSpace('rgb', arguments);\n  },\n  hsl: function hsl() {\n    return this.setSpace('hsl', arguments);\n  },\n  hsv: function hsv() {\n    return this.setSpace('hsv', arguments);\n  },\n  hwb: function hwb() {\n    return this.setSpace('hwb', arguments);\n  },\n  cmyk: function cmyk() {\n    return this.setSpace('cmyk', arguments);\n  },\n  rgbArray: function rgbArray() {\n    return this.values.rgb;\n  },\n  hslArray: function hslArray() {\n    return this.values.hsl;\n  },\n  hsvArray: function hsvArray() {\n    return this.values.hsv;\n  },\n  hwbArray: function hwbArray() {\n    var values = this.values;\n\n    if (values.alpha !== 1) {\n      return values.hwb.concat([values.alpha]);\n    }\n\n    return values.hwb;\n  },\n  cmykArray: function cmykArray() {\n    return this.values.cmyk;\n  },\n  rgbaArray: function rgbaArray() {\n    var values = this.values;\n    return values.rgb.concat([values.alpha]);\n  },\n  hslaArray: function hslaArray() {\n    var values = this.values;\n    return values.hsl.concat([values.alpha]);\n  },\n  alpha: function alpha(val) {\n    if (val === undefined) {\n      return this.values.alpha;\n    }\n\n    this.setValues('alpha', val);\n    return this;\n  },\n  red: function red(val) {\n    return this.setChannel('rgb', 0, val);\n  },\n  green: function green(val) {\n    return this.setChannel('rgb', 1, val);\n  },\n  blue: function blue(val) {\n    return this.setChannel('rgb', 2, val);\n  },\n  hue: function hue(val) {\n    if (val) {\n      val %= 360;\n      val = val < 0 ? 360 + val : val;\n    }\n\n    return this.setChannel('hsl', 0, val);\n  },\n  saturation: function saturation(val) {\n    return this.setChannel('hsl', 1, val);\n  },\n  lightness: function lightness(val) {\n    return this.setChannel('hsl', 2, val);\n  },\n  saturationv: function saturationv(val) {\n    return this.setChannel('hsv', 1, val);\n  },\n  whiteness: function whiteness(val) {\n    return this.setChannel('hwb', 1, val);\n  },\n  blackness: function blackness(val) {\n    return this.setChannel('hwb', 2, val);\n  },\n  value: function value(val) {\n    return this.setChannel('hsv', 2, val);\n  },\n  cyan: function cyan(val) {\n    return this.setChannel('cmyk', 0, val);\n  },\n  magenta: function magenta(val) {\n    return this.setChannel('cmyk', 1, val);\n  },\n  yellow: function yellow(val) {\n    return this.setChannel('cmyk', 2, val);\n  },\n  black: function black(val) {\n    return this.setChannel('cmyk', 3, val);\n  },\n  hexString: function hexString() {\n    return string.hexString(this.values.rgb);\n  },\n  rgbString: function rgbString() {\n    return string.rgbString(this.values.rgb, this.values.alpha);\n  },\n  rgbaString: function rgbaString() {\n    return string.rgbaString(this.values.rgb, this.values.alpha);\n  },\n  percentString: function percentString() {\n    return string.percentString(this.values.rgb, this.values.alpha);\n  },\n  hslString: function hslString() {\n    return string.hslString(this.values.hsl, this.values.alpha);\n  },\n  hslaString: function hslaString() {\n    return string.hslaString(this.values.hsl, this.values.alpha);\n  },\n  hwbString: function hwbString() {\n    return string.hwbString(this.values.hwb, this.values.alpha);\n  },\n  keyword: function keyword() {\n    return string.keyword(this.values.rgb, this.values.alpha);\n  },\n  rgbNumber: function rgbNumber() {\n    var rgb = this.values.rgb;\n    return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n  },\n  luminosity: function luminosity() {\n    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n    var rgb = this.values.rgb;\n    var lum = [];\n\n    for (var i = 0; i < rgb.length; i++) {\n      var chan = rgb[i] / 255;\n      lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n    }\n\n    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n  },\n  contrast: function contrast(color2) {\n    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    var lum1 = this.luminosity();\n    var lum2 = color2.luminosity();\n\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  },\n  level: function level(color2) {\n    var contrastRatio = this.contrast(color2);\n\n    if (contrastRatio >= 7.1) {\n      return 'AAA';\n    }\n\n    return contrastRatio >= 4.5 ? 'AA' : '';\n  },\n  dark: function dark() {\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    var rgb = this.values.rgb;\n    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    return yiq < 128;\n  },\n  light: function light() {\n    return !this.dark();\n  },\n  negate: function negate() {\n    var rgb = [];\n\n    for (var i = 0; i < 3; i++) {\n      rgb[i] = 255 - this.values.rgb[i];\n    }\n\n    this.setValues('rgb', rgb);\n    return this;\n  },\n  lighten: function lighten(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] += hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  darken: function darken(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] -= hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  saturate: function saturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] += hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  desaturate: function desaturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] -= hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  whiten: function whiten(ratio) {\n    var hwb = this.values.hwb;\n    hwb[1] += hwb[1] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  blacken: function blacken(ratio) {\n    var hwb = this.values.hwb;\n    hwb[2] += hwb[2] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  greyscale: function greyscale() {\n    var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n    this.setValues('rgb', [val, val, val]);\n    return this;\n  },\n  clearer: function clearer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha - alpha * ratio);\n    return this;\n  },\n  opaquer: function opaquer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha + alpha * ratio);\n    return this;\n  },\n  rotate: function rotate(degrees) {\n    var hsl = this.values.hsl;\n    var hue = (hsl[0] + degrees) % 360;\n    hsl[0] = hue < 0 ? 360 + hue : hue;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n\n  /**\n   * Ported from sass implementation in C\n   * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n   */\n  mix: function mix(mixinColor, weight) {\n    var color1 = this;\n    var color2 = mixinColor;\n    var p = weight === undefined ? 0.5 : weight;\n    var w = 2 * p - 1;\n    var a = color1.alpha() - color2.alpha();\n    var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n    var w2 = 1 - w1;\n    return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n  },\n  toJSON: function toJSON() {\n    return this.rgb();\n  },\n  clone: function clone() {\n    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n    // making the final build way to big to embed in Chart.js. So let's do it manually,\n    // assuming that values to clone are 1 dimension arrays containing only numbers,\n    // except 'alpha' which is a number.\n    var result = new Color();\n    var source = this.values;\n    var target = result.values;\n    var value, type;\n\n    for (var prop in source) {\n      if (source.hasOwnProperty(prop)) {\n        value = source[prop];\n        type = {}.toString.call(value);\n\n        if (type === '[object Array]') {\n          target[prop] = value.slice(0);\n        } else if (type === '[object Number]') {\n          target[prop] = value;\n        } else {\n          console.error('unexpected color value:', value);\n        }\n      }\n    }\n\n    return result;\n  }\n};\nColor.prototype.spaces = {\n  rgb: ['red', 'green', 'blue'],\n  hsl: ['hue', 'saturation', 'lightness'],\n  hsv: ['hue', 'saturation', 'value'],\n  hwb: ['hue', 'whiteness', 'blackness'],\n  cmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\nColor.prototype.maxes = {\n  rgb: [255, 255, 255],\n  hsl: [360, 100, 100],\n  hsv: [360, 100, 100],\n  hwb: [360, 100, 100],\n  cmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n  var values = this.values;\n  var vals = {};\n\n  for (var i = 0; i < space.length; i++) {\n    vals[space.charAt(i)] = values[space][i];\n  }\n\n  if (values.alpha !== 1) {\n    vals.a = values.alpha;\n  } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n  return vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n  var values = this.values;\n  var spaces = this.spaces;\n  var maxes = this.maxes;\n  var alpha = 1;\n  var i;\n  this.valid = true;\n\n  if (space === 'alpha') {\n    alpha = vals;\n  } else if (vals.length) {\n    // [10, 10, 10]\n    values[space] = vals.slice(0, space.length);\n    alpha = vals[space.length];\n  } else if (vals[space.charAt(0)] !== undefined) {\n    // {r: 10, g: 10, b: 10}\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[space.charAt(i)];\n    }\n\n    alpha = vals.a;\n  } else if (vals[spaces[space][0]] !== undefined) {\n    // {red: 10, green: 10, blue: 10}\n    var chans = spaces[space];\n\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[chans[i]];\n    }\n\n    alpha = vals.alpha;\n  }\n\n  values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n  if (space === 'alpha') {\n    return false;\n  }\n\n  var capped; // cap values of the space prior converting all values\n\n  for (i = 0; i < space.length; i++) {\n    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n    values[space][i] = Math.round(capped);\n  } // convert to all the other color spaces\n\n\n  for (var sname in spaces) {\n    if (sname !== space) {\n      values[sname] = convert[space][sname](values[space]);\n    }\n  }\n\n  return true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n  var vals = args[0];\n\n  if (vals === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof vals === 'number') {\n    vals = Array.prototype.slice.call(args);\n  }\n\n  this.setValues(space, vals);\n  return this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n  var svalues = this.values[space];\n\n  if (val === undefined) {\n    // color.red()\n    return svalues[index];\n  } else if (val === svalues[index]) {\n    // color.red(color.red())\n    return this;\n  } // color.red(100)\n\n\n  svalues[index] = val;\n  this.setValues(space, svalues);\n  return this;\n};\n\nif (typeof window !== 'undefined') {\n  window.Color = Color;\n}\n\nmodule.exports = Color;","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n  chart: null,\n  // the animation associated chart instance\n  currentStep: 0,\n  // the current animation step\n  numSteps: 60,\n  // default number of steps\n  easing: '',\n  // the easing to use for this animation\n  render: null,\n  // render function used by the animation service\n  onAnimationProgress: null,\n  // user specified callback to fire on each step of the animation\n  onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n}); // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'animationObject', {\n  get: function get() {\n    return this;\n  }\n});\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'chartInstance', {\n  get: function get() {\n    return this.chart;\n  },\n  set: function set(value) {\n    this.chart = value;\n  }\n});","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  animation: {\n    duration: 1000,\n    easing: 'easeOutQuart',\n    onProgress: helpers.noop,\n    onComplete: helpers.noop\n  }\n});\n\nmodule.exports = {\n  frameDuration: 17,\n  animations: [],\n  dropFrames: 0,\n  request: null,\n\n  /**\n   * @param {Chart} chart - The chart to animate.\n   * @param {Chart.Animation} animation - The animation that we will animate.\n   * @param {Number} duration - The animation duration in ms.\n   * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n   */\n  addAnimation: function addAnimation(chart, animation, duration, lazy) {\n    var animations = this.animations;\n    var i, ilen;\n    animation.chart = chart;\n\n    if (!lazy) {\n      chart.animating = true;\n    }\n\n    for (i = 0, ilen = animations.length; i < ilen; ++i) {\n      if (animations[i].chart === chart) {\n        animations[i] = animation;\n        return;\n      }\n    }\n\n    animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n    if (animations.length === 1) {\n      this.requestAnimationFrame();\n    }\n  },\n  cancelAnimation: function cancelAnimation(chart) {\n    var index = helpers.findIndex(this.animations, function (animation) {\n      return animation.chart === chart;\n    });\n\n    if (index !== -1) {\n      this.animations.splice(index, 1);\n      chart.animating = false;\n    }\n  },\n  requestAnimationFrame: function requestAnimationFrame() {\n    var me = this;\n\n    if (me.request === null) {\n      // Skip animation frame requests until the active one is executed.\n      // This can happen when processing mouse events, e.g. 'mousemove'\n      // and 'mouseout' events will trigger multiple renders.\n      me.request = helpers.requestAnimFrame.call(window, function () {\n        me.request = null;\n        me.startDigest();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  startDigest: function startDigest() {\n    var me = this;\n    var startTime = Date.now();\n    var framesToDrop = 0;\n\n    if (me.dropFrames > 1) {\n      framesToDrop = Math.floor(me.dropFrames);\n      me.dropFrames = me.dropFrames % 1;\n    }\n\n    me.advance(1 + framesToDrop);\n    var endTime = Date.now();\n    me.dropFrames += (endTime - startTime) / me.frameDuration; // Do we have more stuff to animate?\n\n    if (me.animations.length > 0) {\n      me.requestAnimationFrame();\n    }\n  },\n\n  /**\n   * @private\n   */\n  advance: function advance(count) {\n    var animations = this.animations;\n    var animation, chart;\n    var i = 0;\n\n    while (i < animations.length) {\n      animation = animations[i];\n      chart = animation.chart;\n      animation.currentStep = (animation.currentStep || 0) + count;\n      animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n      helpers.callback(animation.render, [chart, animation], chart);\n      helpers.callback(animation.onAnimationProgress, [animation], chart);\n\n      if (animation.currentStep >= animation.numSteps) {\n        helpers.callback(animation.onAnimationComplete, [animation], chart);\n        chart.animating = false;\n        animations.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\n\n\nfunction getRelativePosition(e, chart) {\n  if (e.native) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return helpers.getRelativePosition(e, chart);\n}\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\n\n\nfunction parseVisibleItems(chart, handler) {\n  var datasets = chart.data.datasets;\n  var meta, i, j, ilen, jlen;\n\n  for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n    if (!chart.isDatasetVisible(i)) {\n      continue;\n    }\n\n    meta = chart.getDatasetMeta(i);\n\n    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n      var element = meta.data[j];\n\n      if (!element._view.skip) {\n        handler(element);\n      }\n    }\n  }\n}\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getIntersectItems(chart, position) {\n  var elements = [];\n  parseVisibleItems(chart, function (element) {\n    if (element.inRange(position.x, position.y)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n}\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n  var minDistance = Number.POSITIVE_INFINITY;\n  var nearestItems = [];\n  parseVisibleItems(chart, function (element) {\n    if (intersect && !element.inRange(position.x, position.y)) {\n      return;\n    }\n\n    var center = element.getCenterPoint();\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      nearestItems = [element];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      nearestItems.push(element);\n    }\n  });\n  return nearestItems;\n}\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\n\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction indexMode(chart, e, options) {\n  var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n  options.axis = options.axis || 'x';\n  var distanceMetric = getDistanceMetricForAxis(options.axis);\n  var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n  var elements = [];\n\n  if (!items.length) {\n    return [];\n  }\n\n  chart.data.datasets.forEach(function (dataset, datasetIndex) {\n    if (chart.isDatasetVisible(datasetIndex)) {\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n      if (element && !element._view.skip) {\n        elements.push(element);\n      }\n    }\n  });\n  return elements;\n}\n/**\n * @interface IInteractionOptions\n */\n\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\n\n\nmodule.exports = {\n  // Helper function for different modes\n  modes: {\n    single: function single(chart, e) {\n      var position = getRelativePosition(e, chart);\n      var elements = [];\n      parseVisibleItems(chart, function (element) {\n        if (element.inRange(position.x, position.y)) {\n          elements.push(element);\n          return elements;\n        }\n      });\n      return elements.slice(0, 1);\n    },\n\n    /**\n     * @function Chart.Interaction.modes.label\n     * @deprecated since version 2.4.0\n     * @todo remove at version 3\n     * @private\n     */\n    label: indexMode,\n\n    /**\n     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n     * @function Chart.Interaction.modes.index\n     * @since v2.4.0\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    index: indexMode,\n\n    /**\n     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect is false, we find the nearest item and return the items in that dataset\n     * @function Chart.Interaction.modes.dataset\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    dataset: function dataset(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n      if (items.length > 0) {\n        items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n      }\n\n      return items;\n    },\n\n    /**\n     * @function Chart.Interaction.modes.x-axis\n     * @deprecated since version 2.4.0. Use index mode and intersect == true\n     * @todo remove at version 3\n     * @private\n     */\n    'x-axis': function xAxis(chart, e) {\n      return indexMode(chart, e, {\n        intersect: false\n      });\n    },\n\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * of the event\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    point: function point(chart, e) {\n      var position = getRelativePosition(e, chart);\n      return getIntersectItems(chart, position);\n    },\n\n    /**\n     * nearest mode returns the element closest to the point\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    nearest: function nearest(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric); // We have multiple items at the same distance from the event. Now sort by smallest\n\n      if (nearestItems.length > 1) {\n        nearestItems.sort(function (a, b) {\n          var sizeA = a.getArea();\n          var sizeB = b.getArea();\n          var ret = sizeA - sizeB;\n\n          if (ret === 0) {\n            // if equal sort by dataset index\n            ret = a._datasetIndex - b._datasetIndex;\n          }\n\n          return ret;\n        });\n      } // Return only 1 item\n\n\n      return nearestItems.slice(0, 1);\n    },\n\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @function Chart.Interaction.modes.x\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    x: function x(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inXRange(position.x)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @function Chart.Interaction.modes.y\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    y: function y(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inYRange(position.y)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar basic = require('./platform.basic');\n\nvar dom = require('./platform.dom'); // @TODO Make possible to select another platform at build time.\n\n\nvar implementation = dom._enabled ? dom : basic;\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\n\nmodule.exports = helpers.extend({\n  /**\n   * @since 2.7.0\n   */\n  initialize: function initialize() {},\n\n  /**\n   * Called at chart construction time, returns a context2d instance implementing\n   * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n   * @param {*} item - The native item from which to acquire context (platform specific)\n   * @param {Object} options - The chart options\n   * @returns {CanvasRenderingContext2D} context2d instance\n   */\n  acquireContext: function acquireContext() {},\n\n  /**\n   * Called at chart destruction time, releases any resources associated to the context\n   * previously returned by the acquireContext() method.\n   * @param {CanvasRenderingContext2D} context - The context2d instance\n   * @returns {Boolean} true if the method succeeded, else false\n   */\n  releaseContext: function releaseContext() {},\n\n  /**\n   * Registers the specified listener on the given chart.\n   * @param {Chart} chart - Chart from which to listen for event\n   * @param {String} type - The ({@link IEvent}) type to listen for\n   * @param {Function} listener - Receives a notification (an object that implements\n   * the {@link IEvent} interface) when an event of the specified type occurs.\n   */\n  addEventListener: function addEventListener() {},\n\n  /**\n   * Removes the specified listener previously registered with addEventListener.\n   * @param {Chart} chart -Chart from which to remove the listener\n   * @param {String} type - The ({@link IEvent}) type to remove\n   * @param {Function} listener - The listener function to remove from the event target.\n   */\n  removeEventListener: function removeEventListener() {}\n}, implementation);\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {}\n});\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\n\n\nmodule.exports = {\n  /**\n   * Globally registered plugins.\n   * @private\n   */\n  _plugins: [],\n\n  /**\n   * This identifier is used to invalidate the descriptors cache attached to each chart\n   * when a global plugin is registered or unregistered. In this case, the cache ID is\n   * incremented and descriptors are regenerated during following API calls.\n   * @private\n   */\n  _cacheId: 0,\n\n  /**\n   * Registers the given plugin(s) if not already registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  register: function register(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      if (p.indexOf(plugin) === -1) {\n        p.push(plugin);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Unregisters the given plugin(s) only if registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  unregister: function unregister(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      var idx = p.indexOf(plugin);\n\n      if (idx !== -1) {\n        p.splice(idx, 1);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Remove all registered plugins.\n   * @since 2.1.5\n   */\n  clear: function clear() {\n    this._plugins = [];\n    this._cacheId++;\n  },\n\n  /**\n   * Returns the number of registered plugins?\n   * @returns {Number}\n   * @since 2.1.5\n   */\n  count: function count() {\n    return this._plugins.length;\n  },\n\n  /**\n   * Returns all registered plugin instances.\n   * @returns {Array} array of plugin objects.\n   * @since 2.1.5\n   */\n  getAll: function getAll() {\n    return this._plugins;\n  },\n\n  /**\n   * Calls enabled plugins for `chart` on the specified hook and with the given args.\n   * This method immediately returns as soon as a plugin explicitly returns false. The\n   * returned value can be used, for instance, to interrupt the current action.\n   * @param {Object} chart - The chart instance for which plugins should be called.\n   * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n   * @param {Array} [args] - Extra arguments to apply to the hook call.\n   * @returns {Boolean} false if any of the plugins return false, else returns true.\n   */\n  notify: function notify(chart, hook, args) {\n    var descriptors = this.descriptors(chart);\n    var ilen = descriptors.length;\n    var i, descriptor, plugin, params, method;\n\n    for (i = 0; i < ilen; ++i) {\n      descriptor = descriptors[i];\n      plugin = descriptor.plugin;\n      method = plugin[hook];\n\n      if (typeof method === 'function') {\n        params = [chart].concat(args || []);\n        params.push(descriptor.options);\n\n        if (method.apply(plugin, params) === false) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns descriptors of enabled plugins for the given chart.\n   * @returns {Array} [{ plugin, options }]\n   * @private\n   */\n  descriptors: function descriptors(chart) {\n    var cache = chart.$plugins || (chart.$plugins = {});\n\n    if (cache.id === this._cacheId) {\n      return cache.descriptors;\n    }\n\n    var plugins = [];\n    var descriptors = [];\n    var config = chart && chart.config || {};\n    var options = config.options && config.options.plugins || {};\n\n    this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n      var idx = plugins.indexOf(plugin);\n\n      if (idx !== -1) {\n        return;\n      }\n\n      var id = plugin.id;\n      var opts = options[id];\n\n      if (opts === false) {\n        return;\n      }\n\n      if (opts === true) {\n        opts = helpers.clone(defaults.global.plugins[id]);\n      }\n\n      plugins.push(plugin);\n      descriptors.push({\n        plugin: plugin,\n        options: opts || {}\n      });\n    });\n\n    cache.descriptors = descriptors;\n    cache.id = this._cacheId;\n    return descriptors;\n  },\n\n  /**\n   * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n   * but in some cases, this reference can be changed by the user when updating options.\n   * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n   * @private\n   */\n  _invalidate: function _invalidate(chart) {\n    delete chart.$plugins;\n  }\n};\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  tooltips: {\n    enabled: true,\n    custom: null,\n    mode: 'nearest',\n    position: 'average',\n    intersect: true,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleFontStyle: 'bold',\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleFontColor: '#fff',\n    titleAlign: 'left',\n    bodySpacing: 2,\n    bodyFontColor: '#fff',\n    bodyAlign: 'left',\n    footerFontStyle: 'bold',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFontColor: '#fff',\n    footerAlign: 'left',\n    yPadding: 6,\n    xPadding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    callbacks: {\n      // Args are: (tooltipItems, data)\n      beforeTitle: helpers.noop,\n      title: function title(tooltipItems, data) {\n        // Pick first xLabel for now\n        var title = '';\n        var labels = data.labels;\n        var labelCount = labels ? labels.length : 0;\n\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n\n          if (item.xLabel) {\n            title = item.xLabel;\n          } else if (labelCount > 0 && item.index < labelCount) {\n            title = labels[item.index];\n          }\n        }\n\n        return title;\n      },\n      afterTitle: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeBody: helpers.noop,\n      // Args are: (tooltipItem, data)\n      beforeLabel: helpers.noop,\n      label: function label(tooltipItem, data) {\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        label += tooltipItem.yLabel;\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem, chart) {\n        var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var activeElement = meta.data[tooltipItem.index];\n        var view = activeElement._view;\n        return {\n          borderColor: view.borderColor,\n          backgroundColor: view.backgroundColor\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this._options.bodyFontColor;\n      },\n      afterLabel: helpers.noop,\n      // Args are: (tooltipItems, data)\n      afterBody: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeFooter: helpers.noop,\n      footer: helpers.noop,\n      afterFooter: helpers.noop\n    }\n  }\n});\n\nvar positioners = {\n  /**\n   * Average mode places the tooltip at the average position of the elements shown\n   * @function Chart.Tooltip.positioners.average\n   * @param elements {ChartElement[]} the elements being displayed in the tooltip\n   * @returns {Point} tooltip position\n   */\n  average: function average(elements) {\n    if (!elements.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: Math.round(x / count),\n      y: Math.round(y / count)\n    };\n  },\n\n  /**\n   * Gets the tooltip position nearest of the item nearest to the event position\n   * @function Chart.Tooltip.positioners.nearest\n   * @param elements {Chart.Element[]} the tooltip elements\n   * @param eventPosition {Point} the position of the event in canvas coordinates\n   * @returns {Point} the tooltip position\n   */\n  nearest: function nearest(elements, eventPosition) {\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = helpers.distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n/**\n * Helper method to merge the opacity into a color\n */\n\nfunction mergeOpacity(colorString, opacity) {\n  var color = helpers.color(colorString);\n  return color.alpha(opacity * color.alpha()).rgbaString();\n} // Helper to push or concat based on if the 2nd parameter is an array or not\n\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (helpers.isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\n\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n} // Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\n\n\nfunction createTooltipItem(element) {\n  var xScale = element._xScale;\n  var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n  var index = element._index;\n  var datasetIndex = element._datasetIndex;\n  return {\n    xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n    yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n    index: index,\n    datasetIndex: datasetIndex,\n    x: element._model.x,\n    y: element._model.y\n  };\n}\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\n\n\nfunction getBaseModel(tooltipOpts) {\n  var globalDefaults = defaults.global;\n  var valueOrDefault = helpers.valueOrDefault;\n  return {\n    // Positioning\n    xPadding: tooltipOpts.xPadding,\n    yPadding: tooltipOpts.yPadding,\n    xAlign: tooltipOpts.xAlign,\n    yAlign: tooltipOpts.yAlign,\n    // Body\n    bodyFontColor: tooltipOpts.bodyFontColor,\n    _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n    _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n    _bodyAlign: tooltipOpts.bodyAlign,\n    bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n    bodySpacing: tooltipOpts.bodySpacing,\n    // Title\n    titleFontColor: tooltipOpts.titleFontColor,\n    _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n    _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n    titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n    _titleAlign: tooltipOpts.titleAlign,\n    titleSpacing: tooltipOpts.titleSpacing,\n    titleMarginBottom: tooltipOpts.titleMarginBottom,\n    // Footer\n    footerFontColor: tooltipOpts.footerFontColor,\n    _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n    _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n    footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n    _footerAlign: tooltipOpts.footerAlign,\n    footerSpacing: tooltipOpts.footerSpacing,\n    footerMarginTop: tooltipOpts.footerMarginTop,\n    // Appearance\n    caretSize: tooltipOpts.caretSize,\n    cornerRadius: tooltipOpts.cornerRadius,\n    backgroundColor: tooltipOpts.backgroundColor,\n    opacity: 0,\n    legendColorBackground: tooltipOpts.multiKeyBackground,\n    displayColors: tooltipOpts.displayColors,\n    borderColor: tooltipOpts.borderColor,\n    borderWidth: tooltipOpts.borderWidth\n  };\n}\n/**\n * Get the size of the tooltip\n */\n\n\nfunction getTooltipSize(tooltip, model) {\n  var ctx = tooltip._chart.ctx;\n  var height = model.yPadding * 2; // Tooltip Padding\n\n  var width = 0; // Count of all lines in the body\n\n  var body = model.body;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n  var titleLineCount = model.title.length;\n  var footerLineCount = model.footer.length;\n  var titleFontSize = model.titleFontSize;\n  var bodyFontSize = model.bodyFontSize;\n  var footerFontSize = model.footerFontSize;\n  height += titleLineCount * titleFontSize; // Title Lines\n\n  height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n  height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n  height += combinedBodyLength * bodyFontSize; // Body Lines\n\n  height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n  height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n  height += footerLineCount * footerFontSize; // Footer Lines\n\n  height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n  // Title width\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n  helpers.each(model.title, maxLineWidth); // Body width\n\n  ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n  helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n  widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n  helpers.each(body, function (bodyItem) {\n    helpers.each(bodyItem.before, maxLineWidth);\n    helpers.each(bodyItem.lines, maxLineWidth);\n    helpers.each(bodyItem.after, maxLineWidth);\n  }); // Reset back to 0\n\n  widthPadding = 0; // Footer width\n\n  ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n  helpers.each(model.footer, maxLineWidth); // Add padding\n\n  width += 2 * model.xPadding;\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Helper to get the alignment of a tooltip given the size\n */\n\n\nfunction determineAlignment(tooltip, size) {\n  var model = tooltip._model;\n  var chart = tooltip._chart;\n  var chartArea = tooltip._chart.chartArea;\n  var xAlign = 'center';\n  var yAlign = 'center';\n\n  if (model.y < size.height) {\n    yAlign = 'top';\n  } else if (model.y > chart.height - size.height) {\n    yAlign = 'bottom';\n  }\n\n  var lf, rf; // functions to determine left, right alignment\n\n  var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n  var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n  var midX = (chartArea.left + chartArea.right) / 2;\n  var midY = (chartArea.top + chartArea.bottom) / 2;\n\n  if (yAlign === 'center') {\n    lf = function lf(x) {\n      return x <= midX;\n    };\n\n    rf = function rf(x) {\n      return x > midX;\n    };\n  } else {\n    lf = function lf(x) {\n      return x <= size.width / 2;\n    };\n\n    rf = function rf(x) {\n      return x >= chart.width - size.width / 2;\n    };\n  }\n\n  olf = function olf(x) {\n    return x + size.width + model.caretSize + model.caretPadding > chart.width;\n  };\n\n  orf = function orf(x) {\n    return x - size.width - model.caretSize - model.caretPadding < 0;\n  };\n\n  yf = function yf(y) {\n    return y <= midY ? 'top' : 'bottom';\n  };\n\n  if (lf(model.x)) {\n    xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n    if (olf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  } else if (rf(model.x)) {\n    xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n    if (orf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  }\n\n  var opts = tooltip._options;\n  return {\n    xAlign: opts.xAlign ? opts.xAlign : xAlign,\n    yAlign: opts.yAlign ? opts.yAlign : yAlign\n  };\n}\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\n\n\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n  // Background Position\n  var x = vm.x;\n  var y = vm.y;\n  var caretSize = vm.caretSize;\n  var caretPadding = vm.caretPadding;\n  var cornerRadius = vm.cornerRadius;\n  var xAlign = alignment.xAlign;\n  var yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n\n  if (xAlign === 'right') {\n    x -= size.width;\n  } else if (xAlign === 'center') {\n    x -= size.width / 2;\n\n    if (x + size.width > chart.width) {\n      x = chart.width - size.width;\n    }\n\n    if (x < 0) {\n      x = 0;\n    }\n  }\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= size.height + paddingAndSize;\n  } else {\n    y -= size.height / 2;\n  }\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n/**\n * Helper to build before and after body lines\n */\n\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n  initialize: function initialize() {\n    this._model = getBaseModel(this._options);\n    this._lastActive = [];\n  },\n  // Get the title\n  // Args are: (tooltipItem, data)\n  getTitle: function getTitle() {\n    var me = this;\n    var opts = me._options;\n    var callbacks = opts.callbacks;\n    var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n    var title = callbacks.title.apply(me, arguments);\n    var afterTitle = callbacks.afterTitle.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  },\n  // Args are: (tooltipItem, data)\n  getBeforeBody: function getBeforeBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n  },\n  // Args are: (tooltipItem, data)\n  getBody: function getBody(tooltipItems, data) {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var bodyItems = [];\n    helpers.each(tooltipItems, function (tooltipItem) {\n      var bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n      pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n      pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  },\n  // Args are: (tooltipItem, data)\n  getAfterBody: function getAfterBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n  },\n  // Get the footer and beforeFooter and afterFooter lines\n  // Args are: (tooltipItem, data)\n  getFooter: function getFooter() {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n    var footer = callbacks.footer.apply(me, arguments);\n    var afterFooter = callbacks.afterFooter.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  },\n  update: function update(changed) {\n    var me = this;\n    var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n    // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n    // which breaks any animations.\n\n    var existingModel = me._model;\n    var model = me._model = getBaseModel(opts);\n    var active = me._active;\n    var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n    var alignment = {\n      xAlign: existingModel.xAlign,\n      yAlign: existingModel.yAlign\n    };\n    var backgroundPoint = {\n      x: existingModel.x,\n      y: existingModel.y\n    };\n    var tooltipSize = {\n      width: existingModel.width,\n      height: existingModel.height\n    };\n    var tooltipPosition = {\n      x: existingModel.caretX,\n      y: existingModel.caretY\n    };\n    var i, len;\n\n    if (active.length) {\n      model.opacity = 1;\n      var labelColors = [];\n      var labelTextColors = [];\n      tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n      var tooltipItems = [];\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(active[i]));\n      } // If the user provided a filter function, use it to modify the tooltip items\n\n\n      if (opts.filter) {\n        tooltipItems = tooltipItems.filter(function (a) {\n          return opts.filter(a, data);\n        });\n      } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n      if (opts.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return opts.itemSort(a, b, data);\n        });\n      } // Determine colors for boxes\n\n\n      helpers.each(tooltipItems, function (tooltipItem) {\n        labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n        labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n      }); // Build the Text Lines\n\n      model.title = me.getTitle(tooltipItems, data);\n      model.beforeBody = me.getBeforeBody(tooltipItems, data);\n      model.body = me.getBody(tooltipItems, data);\n      model.afterBody = me.getAfterBody(tooltipItems, data);\n      model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n      model.x = Math.round(tooltipPosition.x);\n      model.y = Math.round(tooltipPosition.y);\n      model.caretPadding = opts.caretPadding;\n      model.labelColors = labelColors;\n      model.labelTextColors = labelTextColors; // data points\n\n      model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n      tooltipSize = getTooltipSize(this, model);\n      alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n      backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n    } else {\n      model.opacity = 0;\n    }\n\n    model.xAlign = alignment.xAlign;\n    model.yAlign = alignment.yAlign;\n    model.x = backgroundPoint.x;\n    model.y = backgroundPoint.y;\n    model.width = tooltipSize.width;\n    model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n    model.caretX = tooltipPosition.x;\n    model.caretY = tooltipPosition.y;\n    me._model = model;\n\n    if (changed && opts.custom) {\n      opts.custom.call(me, model);\n    }\n\n    return me;\n  },\n  drawCaret: function drawCaret(tooltipPoint, size) {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  },\n  getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n    var x1, x2, x3, y1, y2, y3;\n    var caretSize = vm.caretSize;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var ptX = tooltipPoint.x;\n    var ptY = tooltipPoint.y;\n    var width = size.width;\n    var height = size.height;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        x3 = x1;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        x3 = x1;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        x2 = vm.caretX;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        y3 = y1;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        y3 = y1; // invert drawing order\n\n        var tmp = x3;\n        x3 = x1;\n        x1 = tmp;\n      }\n    }\n\n    return {\n      x1: x1,\n      x2: x2,\n      x3: x3,\n      y1: y1,\n      y2: y2,\n      y3: y3\n    };\n  },\n  drawTitle: function drawTitle(pt, vm, ctx, opacity) {\n    var title = vm.title;\n\n    if (title.length) {\n      ctx.textAlign = vm._titleAlign;\n      ctx.textBaseline = 'top';\n      var titleFontSize = vm.titleFontSize;\n      var titleSpacing = vm.titleSpacing;\n      ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n      ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n      var i, len;\n\n      for (i = 0, len = title.length; i < len; ++i) {\n        ctx.fillText(title[i], pt.x, pt.y);\n        pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === title.length) {\n          pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  },\n  drawBody: function drawBody(pt, vm, ctx, opacity) {\n    var bodyFontSize = vm.bodyFontSize;\n    var bodySpacing = vm.bodySpacing;\n    var body = vm.body;\n    ctx.textAlign = vm._bodyAlign;\n    ctx.textBaseline = 'top';\n    ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily); // Before Body\n\n    var xLinePadding = 0;\n\n    var fillLineOfText = function fillLineOfText(line) {\n      ctx.fillText(line, pt.x + xLinePadding, pt.y);\n      pt.y += bodyFontSize + bodySpacing;\n    }; // Before body lines\n\n\n    ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n    helpers.each(vm.beforeBody, fillLineOfText);\n    var drawColorBoxes = vm.displayColors;\n    xLinePadding = drawColorBoxes ? bodyFontSize + 2 : 0; // Draw body lines now\n\n    helpers.each(body, function (bodyItem, i) {\n      var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n      ctx.fillStyle = textColor;\n      helpers.each(bodyItem.before, fillLineOfText);\n      helpers.each(bodyItem.lines, function (line) {\n        // Draw Legend-like boxes if needed\n        if (drawColorBoxes) {\n          // Fill a white rect so that colours merge nicely if the opacity is < 1\n          ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n          ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Border\n\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n          ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n          ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n          ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n          ctx.fillStyle = textColor;\n        }\n\n        fillLineOfText(line);\n      });\n      helpers.each(bodyItem.after, fillLineOfText);\n    }); // Reset back to 0 for after body\n\n    xLinePadding = 0; // After body lines\n\n    helpers.each(vm.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  },\n  drawFooter: function drawFooter(pt, vm, ctx, opacity) {\n    var footer = vm.footer;\n\n    if (footer.length) {\n      pt.y += vm.footerMarginTop;\n      ctx.textAlign = vm._footerAlign;\n      ctx.textBaseline = 'top';\n      ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n      ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n      helpers.each(footer, function (line) {\n        ctx.fillText(line, pt.x, pt.y);\n        pt.y += vm.footerFontSize + vm.footerSpacing;\n      });\n    }\n  },\n  drawBackground: function drawBackground(pt, vm, ctx, tooltipSize, opacity) {\n    ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n    ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n    ctx.lineWidth = vm.borderWidth;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var x = pt.x;\n    var y = pt.y;\n    var width = tooltipSize.width;\n    var height = tooltipSize.height;\n    var radius = vm.cornerRadius;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (vm.borderWidth > 0) {\n      ctx.stroke();\n    }\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n\n    if (vm.opacity === 0) {\n      return;\n    }\n\n    var tooltipSize = {\n      width: vm.width,\n      height: vm.height\n    };\n    var pt = {\n      x: vm.x,\n      y: vm.y\n    }; // IE11/Edge does not like very small opacities, so snap to 0\n\n    var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n    var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n    if (this._options.enabled && hasTooltipContent) {\n      // Draw Background\n      this.drawBackground(pt, vm, ctx, tooltipSize, opacity); // Draw Title, Body, and Footer\n\n      pt.x += vm.xPadding;\n      pt.y += vm.yPadding; // Titles\n\n      this.drawTitle(pt, vm, ctx, opacity); // Body\n\n      this.drawBody(pt, vm, ctx, opacity); // Footer\n\n      this.drawFooter(pt, vm, ctx, opacity);\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @returns {Boolean} true if the tooltip changed\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var options = me._options;\n    var changed = false;\n    me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n    if (e.type === 'mouseout') {\n      me._active = [];\n    } else {\n      me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n    } // Remember Last Actives\n\n\n    changed = !helpers.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n    if (changed) {\n      me._lastActive = me._active;\n\n      if (options.enabled || options.custom) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true);\n        me.pivot();\n      }\n    }\n\n    return changed;\n  }\n});\n/**\n * @namespace Chart.Tooltip.positioners\n */\n\nexports.positioners = positioners;","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n  responsive: true,\n  responsiveAnimationDuration: 0,\n  maintainAspectRatio: true,\n  events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n  hover: {\n    onHover: null,\n    mode: 'nearest',\n    intersect: true,\n    animationDuration: 400\n  },\n  onClick: null,\n  defaultColor: 'rgba(0,0,0,0.1)',\n  defaultFontColor: '#666',\n  defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n  defaultFontSize: 12,\n  defaultFontStyle: 'normal',\n  showLines: true,\n  // Element defaults defined in element extensions\n  elements: {},\n  // Layout options such as padding\n  layout: {\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n});\n\nmodule.exports = function () {\n  // Occupy the global variable of Chart, and create a simple base class\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  Chart.Chart = Chart;\n  return Chart;\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\n\n\nvar effects = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return -t * (t - 2);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t;\n    }\n\n    return -0.5 * (--t * (t - 2) - 1);\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return (t = t - 1) * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t + 2);\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return -((t = t - 1) * t * t * t - 1);\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t;\n    }\n\n    return -0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return (t = t - 1) * t * t * t * t + 1;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  easeInSine: function easeInSine(t) {\n    return -Math.cos(t * (Math.PI / 2)) + 1;\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * (Math.PI / 2));\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * Math.pow(2, 10 * (t - 1));\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n  },\n  easeInCirc: function easeInCirc(t) {\n    if (t >= 1) {\n      return t;\n    }\n\n    return -(Math.sqrt(1 - t * t) - 1);\n  },\n  easeOutCirc: function easeOutCirc(t) {\n    return Math.sqrt(1 - (t = t - 1) * t);\n  },\n  easeInOutCirc: function easeInOutCirc(t) {\n    if ((t /= 0.5) < 1) {\n      return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  easeInElastic: function easeInElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n  },\n  easeOutElastic: function easeOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n  },\n  easeInOutElastic: function easeInOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if ((t /= 0.5) === 2) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.45;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  easeInBack: function easeInBack(t) {\n    var s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack: function easeOutBack(t) {\n    var s = 1.70158;\n    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack: function easeInOutBack(t) {\n    var s = 1.70158;\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: function easeInBounce(t) {\n    return 1 - effects.easeOutBounce(1 - t);\n  },\n  easeOutBounce: function easeOutBounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n    }\n\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  },\n  easeInOutBounce: function easeInOutBounce(t) {\n    if (t < 0.5) {\n      return effects.easeInBounce(t * 2) * 0.5;\n    }\n\n    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n};\nmodule.exports = {\n  effects: effects\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.easingEffects = effects;","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @namespace Chart.helpers.canvas\n */\n\n\nvar exports = module.exports = {\n  /**\n   * Clears the entire canvas associated to the given `chart`.\n   * @param {Chart} chart - The chart for which to clear the canvas.\n   */\n  clear: function clear(chart) {\n    chart.ctx.clearRect(0, 0, chart.width, chart.height);\n  },\n\n  /**\n   * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n   * given size (width, height) and the same `radius` for all corners.\n   * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n   * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n   * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n   * @param {Number} width - The rectangle's width.\n   * @param {Number} height - The rectangle's height.\n   * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n   * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n   */\n  roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n    if (radius) {\n      // NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n      // on Chrome when `r` is exactly half the height or the width.\n      var epsilon = 0.0000001;\n      var r = Math.min(radius, height / 2 - epsilon, width / 2 - epsilon);\n      ctx.moveTo(x + r, y);\n      ctx.lineTo(x + width - r, y);\n      ctx.arcTo(x + width, y, x + width, y + r, r);\n      ctx.lineTo(x + width, y + height - r);\n      ctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n      ctx.lineTo(x + r, y + height);\n      ctx.arcTo(x, y + height, x, y + height - r, r);\n      ctx.lineTo(x, y + r);\n      ctx.arcTo(x, y, x + r, y, r);\n      ctx.closePath();\n      ctx.moveTo(x, y);\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n  },\n  drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n    var type, edgeLength, xOffset, yOffset, height, size;\n    rotation = rotation || 0;\n\n    if (style && typeof style === 'object') {\n      type = style.toString();\n\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n        return;\n      }\n    }\n\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rotation * Math.PI / 180);\n    ctx.beginPath();\n\n    switch (style) {\n      // Default includes circle\n      default:\n        ctx.arc(0, 0, radius, 0, Math.PI * 2);\n        ctx.closePath();\n        break;\n\n      case 'triangle':\n        edgeLength = 3 * radius / Math.sqrt(3);\n        height = edgeLength * Math.sqrt(3) / 2;\n        ctx.moveTo(-edgeLength / 2, height / 3);\n        ctx.lineTo(edgeLength / 2, height / 3);\n        ctx.lineTo(0, -2 * height / 3);\n        ctx.closePath();\n        break;\n\n      case 'rect':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.rect(-size, -size, 2 * size, 2 * size);\n        break;\n\n      case 'rectRounded':\n        var offset = radius / Math.SQRT2;\n        var leftX = -offset;\n        var topY = -offset;\n        var sideSize = Math.SQRT2 * radius; // NOTE(SB) the rounded rect implementation changed to use `arcTo`\n        // instead of `quadraticCurveTo` since it generates better results\n        // when rect is almost a circle. 0.425 (instead of 0.5) produces\n        // results visually closer to the previous impl.\n\n        this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n        break;\n\n      case 'rectRot':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.moveTo(-size, 0);\n        ctx.lineTo(0, size);\n        ctx.lineTo(size, 0);\n        ctx.lineTo(0, -size);\n        ctx.closePath();\n        break;\n\n      case 'cross':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'crossRot':\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'star':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'line':\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'dash':\n        ctx.moveTo(0, 0);\n        ctx.lineTo(radius, 0);\n        break;\n    }\n\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n  },\n  clipArea: function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  },\n  unclipArea: function unclipArea(ctx) {\n    ctx.restore();\n  },\n  lineTo: function lineTo(ctx, previous, target, flip) {\n    if (target.steppedLine) {\n      if (target.steppedLine === 'after' && !flip || target.steppedLine !== 'after' && flip) {\n        ctx.lineTo(previous.x, target.y);\n      } else {\n        ctx.lineTo(target.x, previous.y);\n      }\n\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    if (!target.tension) {\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.clear = exports.clear;\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.drawRoundedRectangle = function (ctx) {\n  ctx.beginPath();\n  exports.roundedRect.apply(exports, arguments);\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n\n\nmodule.exports = {\n  /**\n   * Converts the given line height `value` in pixels for a specific font `size`.\n   * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n   * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n   * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n   * @since 2.7.0\n   */\n  toLineHeight: function toLineHeight(value, size) {\n    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n\n    value = +matches[2];\n\n    switch (matches[3]) {\n      case 'px':\n        return value;\n\n      case '%':\n        value /= 100;\n        break;\n\n      default:\n        break;\n    }\n\n    return size * value;\n  },\n\n  /**\n   * Converts the given value into a padding object with pre-computed width/height.\n   * @param {Number|Object} value - If a number, set the value to all TRBL component,\n   *  else, if and object, use defined properties and sets undefined ones to 0.\n   * @returns {Object} The padding values (top, right, bottom, left, width, height)\n   * @since 2.7.0\n   */\n  toPadding: function toPadding(value) {\n    var t, r, b, l;\n\n    if (helpers.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      height: t + b,\n      width: l + r\n    };\n  },\n\n  /**\n   * Evaluates the given `inputs` sequentially and returns the first defined value.\n   * @param {Array[]} inputs - An array of values, falling back to the last value.\n   * @param {Object} [context] - If defined and the current value is a function, the value\n   * is called with `context` as first argument and the result becomes the new input.\n   * @param {Number} [index] - If defined and the current value is an array, the value\n   * at `index` become the new input.\n   * @since 2.7.0\n   */\n  resolve: function resolve(inputs, context, index) {\n    var i, ilen, value;\n\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n      }\n\n      if (index !== undefined && helpers.isArray(value)) {\n        value = value[index];\n      }\n\n      if (value !== undefined) {\n        return value;\n      }\n    }\n  }\n};","/* global window: false */\n\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // -- Basic js utility methods\n  helpers.configMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = helpers.scaleMerge(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.scaleMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.where = function (collection, filterCallback) {\n    if (helpers.isArray(collection) && Array.prototype.filter) {\n      return collection.filter(filterCallback);\n    }\n\n    var filtered = [];\n    helpers.each(collection, function (item) {\n      if (filterCallback(item)) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  };\n\n  helpers.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n    return array.findIndex(callback, scope);\n  } : function (array, callback, scope) {\n    scope = scope === undefined ? array : scope;\n\n    for (var i = 0, ilen = array.length; i < ilen; ++i) {\n      if (callback.call(scope, array[i], i, array)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to start of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = -1;\n    }\n\n    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  };\n\n  helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to end of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = arrayToSearch.length;\n    }\n\n    for (var i = startIndex - 1; i >= 0; i--) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  }; // -- Math methods\n\n\n  helpers.isNumber = function (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  helpers.almostEquals = function (x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  };\n\n  helpers.almostWhole = function (x, epsilon) {\n    var rounded = Math.round(x);\n    return rounded - epsilon < x && rounded + epsilon > x;\n  };\n\n  helpers.max = function (array) {\n    return array.reduce(function (max, value) {\n      if (!isNaN(value)) {\n        return Math.max(max, value);\n      }\n\n      return max;\n    }, Number.NEGATIVE_INFINITY);\n  };\n\n  helpers.min = function (array) {\n    return array.reduce(function (min, value) {\n      if (!isNaN(value)) {\n        return Math.min(min, value);\n      }\n\n      return min;\n    }, Number.POSITIVE_INFINITY);\n  };\n\n  helpers.sign = Math.sign ? function (x) {\n    return Math.sign(x);\n  } : function (x) {\n    x = +x; // convert to a number\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n  helpers.log10 = Math.log10 ? function (x) {\n    return Math.log10(x);\n  } : function (x) {\n    var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n    // Check for whole powers of 10,\n    // which due to floating point rounding error should be corrected.\n\n    var powerOf10 = Math.round(exponent);\n    var isPowerOf10 = x === Math.pow(10, powerOf10);\n    return isPowerOf10 ? powerOf10 : exponent;\n  };\n\n  helpers.toRadians = function (degrees) {\n    return degrees * (Math.PI / 180);\n  };\n\n  helpers.toDegrees = function (radians) {\n    return radians * (180 / Math.PI);\n  }; // Gets the angle from vertical upright to the point about a centre.\n\n\n  helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n    var distanceFromXCenter = anglePoint.x - centrePoint.x;\n    var distanceFromYCenter = anglePoint.y - centrePoint.y;\n    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n    if (angle < -0.5 * Math.PI) {\n      angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n\n    return {\n      angle: angle,\n      distance: radialDistanceFromCenter\n    };\n  };\n\n  helpers.distanceBetweenPoints = function (pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  };\n\n  helpers.aliasPixel = function (pixelWidth) {\n    return pixelWidth % 2 === 0 ? 0 : 0.5;\n  };\n\n  helpers.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    var previous = firstPoint.skip ? middlePoint : firstPoint;\n    var current = middlePoint;\n    var next = afterPoint.skip ? middlePoint : afterPoint;\n    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n    var s01 = d01 / (d01 + d12);\n    var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    var fa = t * s01; // scaling factor for triangle Ta\n\n    var fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  };\n\n  helpers.EPSILON = Number.EPSILON || 1e-14;\n\n  helpers.splineCurveMonotone = function (points) {\n    // This function calculates Bézier control points in a similar way than |splineCurve|,\n    // but preserves monotonicity of the provided data and ensures no local extremums are added\n    // between the dataset discrete points due to the interpolation.\n    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n    var pointsWithTangents = (points || []).map(function (point) {\n      return {\n        model: point._model,\n        deltaK: 0,\n        mK: 0\n      };\n    }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n    var pointsLen = pointsWithTangents.length;\n    var i, pointBefore, pointCurrent, pointAfter;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointAfter && !pointAfter.model.skip) {\n        var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n        pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n      }\n\n      if (!pointBefore || pointBefore.model.skip) {\n        pointCurrent.mK = pointCurrent.deltaK;\n      } else if (!pointAfter || pointAfter.model.skip) {\n        pointCurrent.mK = pointBefore.deltaK;\n      } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n        pointCurrent.mK = 0;\n      } else {\n        pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n      }\n    } // Adjust tangents to ensure monotonic properties\n\n\n    var alphaK, betaK, tauK, squaredMagnitude;\n\n    for (i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointsWithTangents[i];\n      pointAfter = pointsWithTangents[i + 1];\n\n      if (pointCurrent.model.skip || pointAfter.model.skip) {\n        continue;\n      }\n\n      if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n        pointCurrent.mK = pointAfter.mK = 0;\n        continue;\n      }\n\n      alphaK = pointCurrent.mK / pointCurrent.deltaK;\n      betaK = pointAfter.mK / pointCurrent.deltaK;\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n      pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n    } // Compute control points\n\n\n    var deltaX;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointBefore && !pointBefore.model.skip) {\n        deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n        pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n        pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n      }\n\n      if (pointAfter && !pointAfter.model.skip) {\n        deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n        pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n        pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n      }\n    }\n  };\n\n  helpers.nextItem = function (collection, index, loop) {\n    if (loop) {\n      return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n    }\n\n    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n  };\n\n  helpers.previousItem = function (collection, index, loop) {\n    if (loop) {\n      return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n    }\n\n    return index <= 0 ? collection[0] : collection[index - 1];\n  }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n  helpers.niceNum = function (range, round) {\n    var exponent = Math.floor(helpers.log10(range));\n    var fraction = range / Math.pow(10, exponent);\n    var niceFraction;\n\n    if (round) {\n      if (fraction < 1.5) {\n        niceFraction = 1;\n      } else if (fraction < 3) {\n        niceFraction = 2;\n      } else if (fraction < 7) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n    } else if (fraction <= 1.0) {\n      niceFraction = 1;\n    } else if (fraction <= 2) {\n      niceFraction = 2;\n    } else if (fraction <= 5) {\n      niceFraction = 5;\n    } else {\n      niceFraction = 10;\n    }\n\n    return niceFraction * Math.pow(10, exponent);\n  }; // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n  helpers.requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        callback();\n      };\n    }\n\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }(); // -- DOM methods\n\n\n  helpers.getRelativePosition = function (evt, chart) {\n    var mouseX, mouseY;\n    var e = evt.originalEvent || evt;\n    var canvas = evt.target || evt.srcElement;\n    var boundingRect = canvas.getBoundingClientRect();\n    var touches = e.touches;\n\n    if (touches && touches.length > 0) {\n      mouseX = touches[0].clientX;\n      mouseY = touches[0].clientY;\n    } else {\n      mouseX = e.clientX;\n      mouseY = e.clientY;\n    } // Scale mouse coordinates into canvas coordinates\n    // by following the pattern laid out by 'jerryj' in the comments of\n    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n    return {\n      x: mouseX,\n      y: mouseY\n    };\n  }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    var valueInPixels;\n\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n\n      if (styleValue.indexOf('%') !== -1) {\n        // percentage * size in dimension\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n\n    return valueInPixels;\n  }\n  /**\n   * Returns if the given value contains an effective constraint.\n   * @private\n   */\n\n\n  function isConstrainedValue(value) {\n    return value !== undefined && value !== null && value !== 'none';\n  } // Private helper to get a constraint dimension\n  // @param domNode : the node to check the constraint on\n  // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n  // @param percentageProperty : property of parent to use when calculating width as a percentage\n  // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\n\n  function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n    var view = document.defaultView;\n\n    var parentNode = helpers._getParentNode(domNode);\n\n    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n    var hasCNode = isConstrainedValue(constrainedNode);\n    var hasCContainer = isConstrainedValue(constrainedContainer);\n    var infinity = Number.POSITIVE_INFINITY;\n\n    if (hasCNode || hasCContainer) {\n      return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n    }\n\n    return 'none';\n  } // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintWidth = function (domNode) {\n    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n  }; // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintHeight = function (domNode) {\n    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n  };\n  /**\n   * @private\n  \t */\n\n\n  helpers._calculatePadding = function (container, padding, parentDimension) {\n    padding = helpers.getStyle(container, padding);\n    return padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n  };\n  /**\n   * @private\n   */\n\n\n  helpers._getParentNode = function (domNode) {\n    var parent = domNode.parentNode;\n\n    if (parent && parent.host) {\n      parent = parent.host;\n    }\n\n    return parent;\n  };\n\n  helpers.getMaximumWidth = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientWidth;\n    }\n\n    var clientWidth = container.clientWidth;\n\n    var paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\n    var paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n    var w = clientWidth - paddingLeft - paddingRight;\n    var cw = helpers.getConstraintWidth(domNode);\n    return isNaN(cw) ? w : Math.min(w, cw);\n  };\n\n  helpers.getMaximumHeight = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientHeight;\n    }\n\n    var clientHeight = container.clientHeight;\n\n    var paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\n    var paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n    var h = clientHeight - paddingTop - paddingBottom;\n    var ch = helpers.getConstraintHeight(domNode);\n    return isNaN(ch) ? h : Math.min(h, ch);\n  };\n\n  helpers.getStyle = function (el, property) {\n    return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n  };\n\n  helpers.retinaScale = function (chart, forceRatio) {\n    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n    if (pixelRatio === 1) {\n      return;\n    }\n\n    var canvas = chart.canvas;\n    var height = chart.height;\n    var width = chart.width;\n    canvas.height = height * pixelRatio;\n    canvas.width = width * pixelRatio;\n    chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n\n    if (!canvas.style.height && !canvas.style.width) {\n      canvas.style.height = height + 'px';\n      canvas.style.width = width + 'px';\n    }\n  }; // -- Canvas methods\n\n\n  helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  };\n\n  helpers.longestText = function (ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    var data = cache.data = cache.data || {};\n    var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n\n    ctx.font = font;\n    var longest = 0;\n    helpers.each(arrayOfThings, function (thing) {\n      // Undefined strings and arrays should not be measured\n      if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n        longest = helpers.measureText(ctx, data, gc, longest, thing);\n      } else if (helpers.isArray(thing)) {\n        // if it is an array lets measure each element\n        // to do maybe simplify this function a bit so we can do this more recursively?\n        helpers.each(thing, function (nestedThing) {\n          // Undefined strings and arrays should not be measured\n          if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n            longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n          }\n        });\n      }\n    });\n    var gcLen = gc.length / 2;\n\n    if (gcLen > arrayOfThings.length) {\n      for (var i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n\n    return longest;\n  };\n\n  helpers.measureText = function (ctx, data, gc, longest, string) {\n    var textWidth = data[string];\n\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n\n    return longest;\n  };\n\n  helpers.numberOfLabelLines = function (arrayOfThings) {\n    var numberOfLines = 1;\n    helpers.each(arrayOfThings, function (thing) {\n      if (helpers.isArray(thing)) {\n        if (thing.length > numberOfLines) {\n          numberOfLines = thing.length;\n        }\n      }\n    });\n    return numberOfLines;\n  };\n\n  helpers.color = !color ? function (value) {\n    console.error('Color.js not found!');\n    return value;\n  } : function (value) {\n    /* global CanvasGradient */\n    if (value instanceof CanvasGradient) {\n      value = defaults.global.defaultColor;\n    }\n\n    return color(value);\n  };\n\n  helpers.getHoverColor = function (colorValue) {\n    /* global CanvasPattern */\n    return colorValue instanceof CanvasPattern ? colorValue : helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n  };\n};","var conversions = require(\"./conversions\");\n\nvar convert = function convert() {\n  return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] = function (func) {\n    // accept array or plain args\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    };\n  }(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = function (func) {\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n      for (var i = 0; i < val.length; i++) {\n        val[i] = Math.round(val[i]);\n      }\n\n      return val;\n    };\n  }(func);\n}\n/* Converter does lazy conversion and caching */\n\n\nvar Converter = function Converter() {\n  this.convs = {};\n};\n/* Either get the values for a space or\n  set the values for a space, depending on args */\n\n\nConverter.prototype.routeSpace = function (space, args) {\n  var values = args[0];\n\n  if (values === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof values == \"number\") {\n    values = Array.prototype.slice.call(args);\n  }\n\n  return this.setValues(space, values);\n};\n/* Set the values for a space, invalidating cache */\n\n\nConverter.prototype.setValues = function (space, values) {\n  this.space = space;\n  this.convs = {};\n  this.convs[space] = values;\n  return this;\n};\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\n\n\nConverter.prototype.getValues = function (space) {\n  var vals = this.convs[space];\n\n  if (!vals) {\n    var fspace = this.space,\n        from = this.convs[fspace];\n    vals = convert[fspace][space](from);\n    this.convs[space] = vals;\n  }\n\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n  Converter.prototype[space] = function (vals) {\n    return this.routeSpace(space, arguments);\n  };\n});\nmodule.exports = convert;","/* MIT license */\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      l;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  l = (min + max) / 2;\n  if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      v;\n  if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  v = max / 255 * 1000 / 10;\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1 / 255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c,\n      m,\n      y,\n      k;\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255; // assume sRGB\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n      x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1,\n      t2,\n      t3,\n      rgb,\n      val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n  rgb = [0, 0, 0];\n\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n    if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv,\n      v;\n\n  if (l === 0) {\n    // no need to do calc on black\n    // also avoids divide by 0 error\n    return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - s * f),\n      t = 255 * v * (1 - s * (1 - f)),\n      v = 255 * v;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl,\n      l;\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= l <= 1 ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args));\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n} // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i,\n      v,\n      f,\n      n; // wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r,\n      g,\n      b;\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r,\n      g,\n      b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x,\n      y,\n      z,\n      y2;\n\n  if (l <= 8) {\n    y = l * 100 / 903.3;\n    y2 = 7.787 * (y / 100) + 16 / 116;\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1 / 3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n  z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr,\n      h,\n      c;\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a,\n      b,\n      hr;\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\nvar reverseKeywords = {};\n\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n  getRgba: getRgba,\n  getHsla: getHsla,\n  getRgb: getRgb,\n  getHsl: getHsl,\n  getHwb: getHwb,\n  getAlpha: getAlpha,\n  hexString: hexString,\n  rgbString: rgbString,\n  rgbaString: rgbaString,\n  percentString: percentString,\n  percentaString: percentaString,\n  hslString: hslString,\n  hslaString: hslaString,\n  hwbString: hwbString,\n  keyword: keyword\n};\n\nfunction getRgba(string) {\n  if (!string) {\n    return;\n  }\n\n  var abbr = /^#([a-fA-F0-9]{3})$/i,\n      hex = /^#([a-fA-F0-9]{6})$/i,\n      rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      keyword = /(\\w+)/;\n  var rgb = [0, 0, 0],\n      a = 1,\n      match = string.match(abbr);\n\n  if (match) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i] + match[i], 16);\n    }\n  } else if (match = string.match(hex)) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n    }\n  } else if (match = string.match(rgba)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i + 1]);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(per)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(keyword)) {\n    if (match[1] == \"transparent\") {\n      return [0, 0, 0, 0];\n    }\n\n    rgb = colorNames[match[1]];\n\n    if (!rgb) {\n      return;\n    }\n  }\n\n  for (var i = 0; i < rgb.length; i++) {\n    rgb[i] = scale(rgb[i], 0, 255);\n  }\n\n  if (!a && a != 0) {\n    a = 1;\n  } else {\n    a = scale(a, 0, 1);\n  }\n\n  rgb[3] = a;\n  return rgb;\n}\n\nfunction getHsla(string) {\n  if (!string) {\n    return;\n  }\n\n  var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hsl);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        s = scale(parseFloat(match[2]), 0, 100),\n        l = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, s, l, a];\n  }\n}\n\nfunction getHwb(string) {\n  if (!string) {\n    return;\n  }\n\n  var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hwb);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        w = scale(parseFloat(match[2]), 0, 100),\n        b = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, w, b, a];\n  }\n}\n\nfunction getRgb(string) {\n  var rgba = getRgba(string);\n  return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n  var vals = getRgba(string);\n\n  if (vals) {\n    return vals[3];\n  } else if (vals = getHsla(string)) {\n    return vals[3];\n  } else if (vals = getHwb(string)) {\n    return vals[3];\n  }\n} // generators\n\n\nfunction hexString(rgb) {\n  return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return rgbaString(rgba, alpha);\n  }\n\n  return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n  if (alpha === undefined) {\n    alpha = rgba[3] !== undefined ? rgba[3] : 1;\n  }\n\n  return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return percentaString(rgba, alpha);\n  }\n\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n  if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n    return hslaString(hsla, alpha);\n  }\n\n  return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n  if (alpha === undefined) {\n    alpha = hsla[3] !== undefined ? hsla[3] : 1;\n  }\n\n  return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n} // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\n\n\nfunction hwbString(hwb, alpha) {\n  if (alpha === undefined) {\n    alpha = hwb[3] !== undefined ? hwb[3] : 1;\n  }\n\n  return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n} // helpers\n\n\nfunction scale(num, min, max) {\n  return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return str.length < 2 ? \"0\" + str : str;\n} //create a list of reverse color names\n\n\nvar reverseNames = {};\n\nfor (var name in colorNames) {\n  reverseNames[colorNames[name]] = name;\n}","'use strict';\n\nmodule.exports = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  elements: {\n    arc: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: '#fff',\n      borderWidth: 2\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  inLabelRange: function inLabelRange(mouseX) {\n    var vm = this._view;\n\n    if (vm) {\n      return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n    }\n\n    return false;\n  },\n  inRange: function inRange(chartX, chartY) {\n    var vm = this._view;\n\n    if (vm) {\n      var pointRelativePosition = helpers.getAngleFromPoint(vm, {\n        x: chartX,\n        y: chartY\n      });\n      var angle = pointRelativePosition.angle;\n      var distance = pointRelativePosition.distance; // Sanitise angle range\n\n      var startAngle = vm.startAngle;\n      var endAngle = vm.endAngle;\n\n      while (endAngle < startAngle) {\n        endAngle += 2.0 * Math.PI;\n      }\n\n      while (angle > endAngle) {\n        angle -= 2.0 * Math.PI;\n      }\n\n      while (angle < startAngle) {\n        angle += 2.0 * Math.PI;\n      } // Check if within the range of the open/close angle\n\n\n      var betweenAngles = angle >= startAngle && angle <= endAngle;\n      var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n      return betweenAngles && withinRadius;\n    }\n\n    return false;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n    return {\n      x: vm.x + Math.cos(halfAngle) * halfRadius,\n      y: vm.y + Math.sin(halfAngle) * halfRadius\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n    return {\n      x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n      y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n    };\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var sA = vm.startAngle;\n    var eA = vm.endAngle;\n    ctx.beginPath();\n    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n    ctx.closePath();\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = vm.borderWidth;\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.fill();\n    ctx.lineJoin = 'bevel';\n\n    if (vm.borderWidth) {\n      ctx.stroke();\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n  elements: {\n    line: {\n      tension: 0.4,\n      backgroundColor: globalDefaults.defaultColor,\n      borderWidth: 3,\n      borderColor: globalDefaults.defaultColor,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      capBezierPoints: true,\n      fill: true // do we fill in the area between the line and its base axis\n\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var me = this;\n    var vm = me._view;\n    var ctx = me._chart.ctx;\n    var spanGaps = vm.spanGaps;\n\n    var points = me._children.slice(); // clone array\n\n\n    var globalOptionLineElements = globalDefaults.elements.line;\n    var lastDrawnIndex = -1;\n    var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n    if (me._loop && points.length) {\n      points.push(points[0]);\n    }\n\n    ctx.save(); // Stroke Line Options\n\n    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n    }\n\n    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n    ctx.beginPath();\n    lastDrawnIndex = -1;\n\n    for (index = 0; index < points.length; ++index) {\n      current = points[index];\n      previous = helpers.previousItem(points, index);\n      currentVM = current._view; // First point moves to it's starting position no matter what\n\n      if (index === 0) {\n        if (!currentVM.skip) {\n          ctx.moveTo(currentVM.x, currentVM.y);\n          lastDrawnIndex = index;\n        }\n      } else {\n        previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n        if (!currentVM.skip) {\n          if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n            // There was a gap and this is the first point after the gap\n            ctx.moveTo(currentVM.x, currentVM.y);\n          } else {\n            // Line to next point\n            helpers.canvas.lineTo(ctx, previous._view, current._view);\n          }\n\n          lastDrawnIndex = index;\n        }\n      }\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n  elements: {\n    point: {\n      radius: 3,\n      pointStyle: 'circle',\n      backgroundColor: defaultColor,\n      borderColor: defaultColor,\n      borderWidth: 1,\n      // Hover\n      hitRadius: 1,\n      hoverRadius: 4,\n      hoverBorderWidth: 1\n    }\n  }\n});\n\nfunction xRange(mouseX) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n}\n\nfunction yRange(mouseY) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n}\n\nmodule.exports = Element.extend({\n  inRange: function inRange(mouseX, mouseY) {\n    var vm = this._view;\n    return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n  },\n  inLabelRange: xRange,\n  inXRange: xRange,\n  inYRange: yRange,\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  },\n  getArea: function getArea() {\n    return Math.PI * Math.pow(this._view.radius, 2);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y,\n      padding: vm.radius + vm.borderWidth\n    };\n  },\n  draw: function draw(chartArea) {\n    var vm = this._view;\n    var model = this._model;\n    var ctx = this._chart.ctx;\n    var pointStyle = vm.pointStyle;\n    var rotation = vm.rotation;\n    var radius = vm.radius;\n    var x = vm.x;\n    var y = vm.y;\n    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n    if (vm.skip) {\n      return;\n    } // Clipping for Points.\n\n\n    if (chartArea === undefined || model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y) {\n      ctx.strokeStyle = vm.borderColor || defaultColor;\n      ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n      ctx.fillStyle = vm.backgroundColor || defaultColor;\n      helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n  elements: {\n    rectangle: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: defaults.global.defaultColor,\n      borderSkipped: 'bottom',\n      borderWidth: 0\n    }\n  }\n});\n\nfunction isVertical(bar) {\n  return bar._view.width !== undefined;\n}\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\n\n\nfunction getBarBounds(bar) {\n  var vm = bar._view;\n  var x1, x2, y1, y2;\n\n  if (isVertical(bar)) {\n    // vertical\n    var halfWidth = vm.width / 2;\n    x1 = vm.x - halfWidth;\n    x2 = vm.x + halfWidth;\n    y1 = Math.min(vm.y, vm.base);\n    y2 = Math.max(vm.y, vm.base);\n  } else {\n    // horizontal bar\n    var halfHeight = vm.height / 2;\n    x1 = Math.min(vm.x, vm.base);\n    x2 = Math.max(vm.x, vm.base);\n    y1 = vm.y - halfHeight;\n    y2 = vm.y + halfHeight;\n  }\n\n  return {\n    left: x1,\n    top: y1,\n    right: x2,\n    bottom: y2\n  };\n}\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var left, right, top, bottom, signX, signY, borderSkipped;\n    var borderWidth = vm.borderWidth;\n\n    if (!vm.horizontal) {\n      // bar\n      left = vm.x - vm.width / 2;\n      right = vm.x + vm.width / 2;\n      top = vm.y;\n      bottom = vm.base;\n      signX = 1;\n      signY = bottom > top ? 1 : -1;\n      borderSkipped = vm.borderSkipped || 'bottom';\n    } else {\n      // horizontal bar\n      left = vm.base;\n      right = vm.x;\n      top = vm.y - vm.height / 2;\n      bottom = vm.y + vm.height / 2;\n      signX = right > left ? 1 : -1;\n      signY = 1;\n      borderSkipped = vm.borderSkipped || 'left';\n    } // Canvas doesn't allow us to stroke inside the width so we can\n    // adjust the sizes to fit if we're setting a stroke on the line\n\n\n    if (borderWidth) {\n      // borderWidth shold be less than bar width and bar height.\n      var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n      borderWidth = borderWidth > barSize ? barSize : borderWidth;\n      var halfStroke = borderWidth / 2; // Adjust borderWidth when bar top position is near vm.base(zero).\n\n      var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n      var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n      var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n      var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0); // not become a vertical line?\n\n      if (borderLeft !== borderRight) {\n        top = borderTop;\n        bottom = borderBottom;\n      } // not become a horizontal line?\n\n\n      if (borderTop !== borderBottom) {\n        left = borderLeft;\n        right = borderRight;\n      }\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = borderWidth; // Corner points, from bottom-left to bottom-right clockwise\n    // | 1 2 |\n    // | 0 3 |\n\n    var corners = [[left, bottom], [left, top], [right, top], [right, bottom]]; // Find first (starting) corner with fallback to 'bottom'\n\n    var borders = ['bottom', 'left', 'top', 'right'];\n    var startCorner = borders.indexOf(borderSkipped, 0);\n\n    if (startCorner === -1) {\n      startCorner = 0;\n    }\n\n    function cornerAt(index) {\n      return corners[(startCorner + index) % 4];\n    } // Draw rectangle from 'startCorner'\n\n\n    var corner = cornerAt(0);\n    ctx.moveTo(corner[0], corner[1]);\n\n    for (var i = 1; i < 4; i++) {\n      corner = cornerAt(i);\n      ctx.lineTo(corner[0], corner[1]);\n    }\n\n    ctx.fill();\n\n    if (borderWidth) {\n      ctx.stroke();\n    }\n  },\n  height: function height() {\n    var vm = this._view;\n    return vm.base - vm.y;\n  },\n  inRange: function inRange(mouseX, mouseY) {\n    var inRange = false;\n\n    if (this._view) {\n      var bounds = getBarBounds(this);\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inLabelRange: function inLabelRange(mouseX, mouseY) {\n    var me = this;\n\n    if (!me._view) {\n      return false;\n    }\n\n    var inRange = false;\n    var bounds = getBarBounds(me);\n\n    if (isVertical(me)) {\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right;\n    } else {\n      inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inXRange: function inXRange(mouseX) {\n    var bounds = getBarBounds(this);\n    return mouseX >= bounds.left && mouseX <= bounds.right;\n  },\n  inYRange: function inYRange(mouseY) {\n    var bounds = getBarBounds(this);\n    return mouseY >= bounds.top && mouseY <= bounds.bottom;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var x, y;\n\n    if (isVertical(this)) {\n      x = vm.x;\n      y = (vm.y + vm.base) / 2;\n    } else {\n      x = (vm.x + vm.base) / 2;\n      y = vm.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return vm.width * Math.abs(vm.y - vm.base);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  }\n});","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\nmodule.exports = {\n  acquireContext: function acquireContext(item) {\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    }\n\n    return item && item.getContext('2d') || null;\n  }\n};","/**\n * Chart.Platform implementation for targeting a web browser\n */\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\n\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\n\nfunction readUsedSize(element, property) {\n  var value = helpers.getStyle(element, property);\n  var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? Number(matches[1]) : undefined;\n}\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\n\n\nfunction initCanvas(canvas, config) {\n  var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  }; // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n\n  style.display = style.display || 'block';\n\n  if (renderWidth === null || renderWidth === '') {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (renderHeight === null || renderHeight === '') {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (config.options.aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayWidth !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\n\n\nvar supportsEventListenerOptions = function () {\n  var supports = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supports = true;\n      }\n    });\n    window.addEventListener('e', null, options);\n  } catch (e) {// continue regardless of error\n  }\n\n  return supports;\n}(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\n\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction _addEventListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction _removeEventListener(node, type, listener) {\n  node.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n  return {\n    type: type,\n    chart: chart,\n    native: nativeEvent || null,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var pos = helpers.getRelativePosition(event, chart);\n  return createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n  var ticking = false;\n  var args = [];\n  return function () {\n    args = Array.prototype.slice.call(arguments);\n    thisArg = thisArg || this;\n\n    if (!ticking) {\n      ticking = true;\n      helpers.requestAnimFrame.call(window, function () {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n} // Implementation based on https://github.com/marcj/css-element-queries\n\n\nfunction createResizer(handler) {\n  var resizer = document.createElement('div');\n  var cls = CSS_PREFIX + 'size-monitor';\n  var maxSize = 1000000;\n  var style = 'position:absolute;' + 'left:0;' + 'top:0;' + 'right:0;' + 'bottom:0;' + 'overflow:hidden;' + 'pointer-events:none;' + 'visibility:hidden;' + 'z-index:-1;';\n  resizer.style.cssText = style;\n  resizer.className = cls;\n  resizer.innerHTML = '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:' + maxSize + 'px;' + 'height:' + maxSize + 'px;' + 'left:0;' + 'top:0\">' + '</div>' + '</div>' + '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:200%;' + 'height:200%;' + 'left:0; ' + 'top:0\">' + '</div>' + '</div>';\n  var expand = resizer.childNodes[0];\n  var shrink = resizer.childNodes[1];\n\n  resizer._reset = function () {\n    expand.scrollLeft = maxSize;\n    expand.scrollTop = maxSize;\n    shrink.scrollLeft = maxSize;\n    shrink.scrollTop = maxSize;\n  };\n\n  var onScroll = function onScroll() {\n    resizer._reset();\n\n    handler();\n  };\n\n  _addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\n  _addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n  return resizer;\n} // https://davidwalsh.name/detect-node-insertion\n\n\nfunction watchForRender(node, handler) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n  var proxy = expando.renderProxy = function (e) {\n    if (e.animationName === CSS_RENDER_ANIMATION) {\n      handler();\n    }\n  };\n\n  helpers.each(ANIMATION_START_EVENTS, function (type) {\n    _addEventListener(node, type, proxy);\n  }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n  // is removed then added back immediately (same animation frame?). Accessing the\n  // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n  // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n  // https://github.com/chartjs/Chart.js/issues/4737\n\n  expando.reflow = !!node.offsetParent;\n  node.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var proxy = expando.renderProxy;\n\n  if (proxy) {\n    helpers.each(ANIMATION_START_EVENTS, function (type) {\n      _removeEventListener(node, type, proxy);\n    });\n    delete expando.renderProxy;\n  }\n\n  node.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n  var resizer = expando.resizer = createResizer(throttled(function () {\n    if (expando.resizer) {\n      return listener(createEvent('resize', chart));\n    }\n  })); // The resizer needs to be attached to the node parent, so we first need to be\n  // sure that `node` is attached to the DOM before injecting the resizer element.\n\n  watchForRender(node, function () {\n    if (expando.resizer) {\n      var container = node.parentNode;\n\n      if (container && container !== resizer.parentNode) {\n        container.insertBefore(resizer, container.firstChild);\n      } // The container size might have changed, let's reset the resizer state.\n\n\n      resizer._reset();\n    }\n  });\n}\n\nfunction removeResizeListener(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var resizer = expando.resizer;\n  delete expando.resizer;\n  unwatchForRender(node);\n\n  if (resizer && resizer.parentNode) {\n    resizer.parentNode.removeChild(resizer);\n  }\n}\n\nfunction injectCSS(platform, css) {\n  // http://stackoverflow.com/q/3922139\n  var style = platform._style || document.createElement('style');\n\n  if (!platform._style) {\n    platform._style = style;\n    css = '/* Chart.js */\\n' + css;\n    style.setAttribute('type', 'text/css');\n    document.getElementsByTagName('head')[0].appendChild(style);\n  }\n\n  style.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n  /**\n   * This property holds whether this platform is enabled for the current environment.\n   * Currently used by platform.js to select the proper implementation.\n   * @private\n   */\n  _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n  initialize: function initialize() {\n    var keyframes = 'from{opacity:0.99}to{opacity:1}';\n    injectCSS(this, // DOM rendering detection\n    // https://davidwalsh.name/detect-node-insertion\n    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '.' + CSS_RENDER_MONITOR + '{' + '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + 'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + '}');\n  },\n  acquireContext: function acquireContext(item, config) {\n    if (typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item.length) {\n      // Support for array based queries (such as jQuery)\n      item = item[0];\n    }\n\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n\n\n    var context = item && item.getContext && item.getContext('2d'); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the item has a context2D which has item as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n\n    if (context && context.canvas === item) {\n      initCanvas(item, config);\n      return context;\n    }\n\n    return null;\n  },\n  releaseContext: function releaseContext(context) {\n    var canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return;\n    }\n\n    var initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(function (prop) {\n      var value = initial[prop];\n\n      if (helpers.isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    helpers.each(initial.style || {}, function (value, key) {\n      canvas.style[key] = value;\n    }); // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n  },\n  addEventListener: function addEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      addResizeListener(canvas, listener, chart);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n    var proxies = expando.proxies || (expando.proxies = {});\n\n    var proxy = proxies[chart.id + '_' + type] = function (event) {\n      listener(fromNativeEvent(event, chart));\n    };\n\n    _addEventListener(canvas, type, proxy);\n  },\n  removeEventListener: function removeEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      removeResizeListener(canvas, listener);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || {};\n    var proxies = expando.proxies || {};\n    var proxy = proxies[chart.id + '_' + type];\n\n    if (!proxy) {\n      return;\n    }\n\n    _removeEventListener(canvas, type, proxy);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.addEvent = _addEventListener;\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.removeEvent = _removeEventListener;","'use strict';\n\nvar Animation = require('./core.animation');\n\nvar animations = require('./core.animations');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Interaction = require('./core.interaction');\n\nvar layouts = require('./core.layouts');\n\nvar platform = require('../platforms/platform');\n\nvar plugins = require('./core.plugins');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function (Chart) {\n  // Create a dictionary of chart types, to allow for extension of existing types\n  Chart.types = {}; // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  // Destroy method on the chart will remove the instance of the chart from this reference.\n\n  Chart.instances = {}; // Controllers available for dataset visualization eg. bar, line, slice, etc.\n\n  Chart.controllers = {};\n  /**\n   * Initializes the given config with global and chart default values.\n   */\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use configMerge() for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = helpers.configMerge(defaults.global, defaults[config.type], config.options || {});\n    return config;\n  }\n  /**\n   * Updates the config of the chart\n   * @param chart {Chart} chart to update the options for\n   */\n\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers.each(chart.scales, function (scale) {\n      layouts.removeBox(chart, scale);\n    });\n    newOptions = helpers.configMerge(Chart.defaults.global, Chart.defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  helpers.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      plugins.notify(me, 'beforeInit');\n      helpers.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (me.options.onResize) {\n          me.options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: me.options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var types = [];\n      var newControllers = [];\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n        types.push(meta.type);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = Chart.controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      plugins._invalidate(me);\n\n      if (plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      plugins.notify(me, 'afterScaleUpdate');\n      plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var duration = config.duration;\n      var lazy = config.lazy;\n\n      if (plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var animationOptions = me.options.animation;\n\n      var onComplete = function onComplete(animation) {\n        plugins.notify(me, 'afterRender');\n        helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && (typeof duration !== 'undefined' && duration !== 0 || typeof duration === 'undefined' && animationOptions.duration !== 0)) {\n        var animation = new Animation({\n          numSteps: (duration || animationOptions.duration) / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new Animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n\n      if (me.scale) {\n        me.scale.draw();\n      }\n\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n    // Get the single element that was clicked on\n    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n    getElementAtEvent: function getElementAtEvent(e) {\n      return Interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return Interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return Interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return Interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new Tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {Boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  Chart.DatasetController = function (chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers.extend(Chart.DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        listenArrayEvents(data, me);\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var getHoverColor = helpers.getHoverColor;\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      this.insertElements(this.getDataset().data.length - 1, arguments.length);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  Chart.DatasetController.extend = helpers.inherits;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  var factor;\n  var precision;\n  var spacing;\n\n  if (generationOptions.stepSize && generationOptions.stepSize > 0) {\n    spacing = generationOptions.stepSize;\n  } else {\n    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n    precision = generationOptions.precision;\n\n    if (precision !== undefined) {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n  }\n\n  var niceMin = Math.floor(dataRange.min / spacing) * spacing;\n  var niceMax = Math.ceil(dataRange.max / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n  if (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n    // If very close to our whole number, use it.\n    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n      niceMin = generationOptions.min;\n      niceMax = generationOptions.max;\n    }\n  }\n\n  var numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n  if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n    numSpaces = Math.round(numSpaces);\n  } else {\n    numSpaces = Math.ceil(numSpaces);\n  }\n\n  precision = 1;\n\n  if (spacing < 1) {\n    precision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n    niceMin = Math.round(niceMin * precision) / precision;\n    niceMax = Math.round(niceMax * precision) / precision;\n  }\n\n  ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\n  for (var j = 1; j < numSpaces; ++j) {\n    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n  }\n\n  ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var noop = helpers.noop;\n  Chart.LinearScaleBase = Scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return Scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers.sign(me.min);\n        var maxSign = helpers.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: noop,\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      Scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n};","'use strict';\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // Default config for a category scale\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var DatasetScale = Scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var isHorizontal = me.isHorizontal();\n\n      if (data.yLabels && !isHorizontal) {\n        return me.getRightValue(data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + Math.round(widthOffset);\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + Math.round(heightOffset);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  });\n  scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    ticks: {\n      callback: Ticks.formatters.linear\n    }\n  };\n  var LinearScale = Chart.LinearScaleBase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers.min(values);\n          var maxVal = helpers.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var maxTicks;\n      var me = this;\n      var tickOpts = me.options.ticks;\n\n      if (me.isHorizontal()) {\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n      } else {\n        // The factor of 2 used to scale the font size has been experimentally determined.\n        var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n      }\n\n      return maxTicks;\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  });\n  scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = [];\n  var valueOrDefault = helpers.valueOrDefault; // Figure out what the max number of ticks we can support it is based on the size of\n  // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n  // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n  // the graph\n\n  var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n  var endExp = Math.floor(helpers.log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var exp, significand;\n\n  if (tickVal === 0) {\n    exp = Math.floor(helpers.log10(dataRange.minNotZero));\n    significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n    ticks.push(tickVal);\n    tickVal = significand * Math.pow(10, exp);\n  } else {\n    exp = Math.floor(helpers.log10(tickVal));\n    significand = Math.floor(tickVal / Math.pow(10, exp));\n  }\n\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push(tickVal);\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = valueOrDefault(generationOptions.max, tickVal);\n  ticks.push(lastTick);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: Ticks.formatters.logarithmic\n    }\n  };\n  var LogarithmicScale = Scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers.min(valuesForType);\n            var maxVal = helpers.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = valueOrDefault(tickOpts.min, me.min);\n      me.max = valueOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: tickOpts.min,\n        max: tickOpts.max\n      };\n      var ticks = me.ticks = generateTicks(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      Scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {Number} value - The minimum not zero value.\n     * @return {Number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  });\n  scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var globalDefaults = defaults.global;\n  var defaultConfig = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: Ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getPointLabelFontOptions(scale) {\n    var pointLabelOptions = scale.options.pointLabels;\n    var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n    var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n    var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n    var font = helpers.fontString(fontSize, fontStyle, fontFamily);\n    return {\n      size: fontSize,\n      style: fontStyle,\n      family: fontFamily,\n      font: font\n    };\n  }\n\n  function measureLabelSize(ctx, fontSize, label) {\n    if (helpers.isArray(label)) {\n      return {\n        w: helpers.longestText(ctx, ctx.font, label),\n        h: label.length * fontSize + (label.length - 1) * 1.5 * fontSize\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: fontSize\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size - 5,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size + 5\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    /*\n     * Right, this is really confusing and there is a lot of maths going on here\n     * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n     *\n     * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n     *\n     * Solution:\n     *\n     * We assume the radius of the polygon is half the size of the canvas at first\n     * at each index we check if the text overlaps.\n     *\n     * Where it does, we store that angle and that index.\n     *\n     * After finding the largest index and angle we calculate how much we need to remove\n     * from the shape radius to move the point inwards by that x.\n     *\n     * We average the left and right distances to get the maximum shape radius that can fit in the box\n     * along with labels.\n     *\n     * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n     * on each side, removing that from the size, halving it and adding the left x protrusion width.\n     *\n     * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n     * and position it in the most space efficient manner\n     *\n     * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n     */\n    var plFont = getPointLabelFontOptions(scale); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    var furthestLimits = {\n      r: scale.width,\n      l: 0,\n      t: scale.height,\n      b: 0\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.font;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, largestPossibleRadius);\n      textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n  }\n  /**\n   * Helper function to fit a radial linear scale with no point labels\n   */\n\n\n  function _fit(scale) {\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    scale.drawingArea = Math.round(largestPossibleRadius);\n    scale.setCenterPoint(0, 0, 0, 0);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, fontSize) {\n    if (helpers.isArray(text)) {\n      var y = position.y;\n      var spacing = 1.5 * fontSize;\n\n      for (var i = 0; i < text.length; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += spacing;\n      }\n    } else {\n      ctx.fillText(text, position.x, position.y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var pointLabelOpts = opts.pointLabels;\n    ctx.lineWidth = angleLineOpts.lineWidth;\n    ctx.strokeStyle = angleLineOpts.color;\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = getPointLabelFontOptions(scale);\n    ctx.textBaseline = 'top';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra 3px out for some label spacing\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n        ctx.font = plFont.font;\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n      }\n    }\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n    ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n    if (scale.options.gridLines.circular) {\n      // Draw circular arcs between the points\n      ctx.beginPath();\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.stroke();\n    } else {\n      // Draw straight lines connecting each index\n      var valueCount = getValueCount(scale);\n\n      if (valueCount === 0) {\n        return;\n      }\n\n      ctx.beginPath();\n      var pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n\n  function numberOrZero(param) {\n    return helpers.isNumber(param) ? param : 0;\n  }\n\n  var LinearRadialScale = Chart.LinearScaleBase.extend({\n    setDimensions: function setDimensions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.xCenter = Math.round(me.width / 2);\n      me.yCenter = Math.round(me.height / 2);\n      var minSize = helpers.min([me.height, me.width]);\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      me.drawingArea = opts.display ? minSize / 2 - (tickFontSize / 2 + tickOpts.backdropPaddingY) : minSize / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      if (this.options.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        _fit(this);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - bottomMovement - me.drawingArea;\n      me.xCenter = Math.round((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.round((maxTop + maxBottom) / 2 + me.top);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n        y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0); // Tick Font\n\n        var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n        var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n        var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n        var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n        helpers.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n              ctx.font = tickLabelFont;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFontSize + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n      }\n    }\n  });\n  scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\n\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService'); // Integer constants are from the ES6 spec.\n\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: [1, 2, 3, 6, 12]\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: [1, 2, 5]\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: [1, 2, 3, 4]\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: [1, 2, 3]\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: [1, 2, 3, 4]\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction arrayUnique(items) {\n  var hash = {};\n  var out = [];\n  var i, ilen, item;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    item = items[i];\n\n    if (!hash[item]) {\n      hash[item] = true;\n      out.push(item);\n    }\n  }\n\n  return out;\n}\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\n\n\nfunction buildLookupTable(timestamps, min, max, distribution) {\n  if (distribution === 'linear' || !timestamps.length) {\n    return [{\n      time: min,\n      pos: 0\n    }, {\n      time: max,\n      pos: 1\n    }];\n  }\n\n  var table = [];\n  var items = [min];\n  var i, ilen, prev, curr, next;\n\n  for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n    curr = timestamps[i];\n\n    if (curr > min && curr < max) {\n      items.push(curr);\n    }\n  }\n\n  items.push(max);\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    next = items[i + 1];\n    prev = items[i - 1];\n    curr = items[i]; // only add points that breaks the scale linearity\n\n    if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n      table.push({\n        time: curr,\n        pos: i / (ilen - 1)\n      });\n    }\n  }\n\n  return table;\n} // @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\nfunction lookup(table, key, value) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var mid, i0, i1;\n\n  while (lo >= 0 && lo <= hi) {\n    mid = lo + hi >> 1;\n    i0 = table[mid - 1] || null;\n    i1 = table[mid];\n\n    if (!i0) {\n      // given value is outside table (before first item)\n      return {\n        lo: null,\n        hi: i1\n      };\n    } else if (i1[key] < value) {\n      lo = mid + 1;\n    } else if (i0[key] > value) {\n      hi = mid - 1;\n    } else {\n      return {\n        lo: i0,\n        hi: i1\n      };\n    }\n  } // given value is outside table (after last item)\n\n\n  return {\n    lo: i1,\n    hi: null\n  };\n}\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\n\n\nfunction interpolate(table, skey, sval, tkey) {\n  var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n  var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n  var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n  var span = next[skey] - prev[skey];\n  var ratio = span ? (sval - prev[skey]) / span : 0;\n  var offset = (next[tkey] - prev[tkey]) * ratio;\n  return prev[tkey] + offset;\n}\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\n\n\nfunction momentify(value, options) {\n  var parser = options.parser;\n  var format = options.parser || options.format;\n\n  if (typeof parser === 'function') {\n    return parser(value);\n  }\n\n  if (typeof value === 'string' && typeof format === 'string') {\n    return moment(value, format);\n  }\n\n  if (!(value instanceof moment)) {\n    value = moment(value);\n  }\n\n  if (value.isValid()) {\n    return value;\n  } // Labels are in an incompatible moment format and no `parser` has been provided.\n  // The user might still use the deprecated `format` option to convert his inputs.\n\n\n  if (typeof format === 'function') {\n    return format(value);\n  }\n\n  return value;\n}\n\nfunction parse(input, scale) {\n  if (helpers.isNullOrUndef(input)) {\n    return null;\n  }\n\n  var options = scale.options.time;\n  var value = momentify(scale.getRightValue(input), options);\n\n  if (!value.isValid()) {\n    return null;\n  }\n\n  if (options.round) {\n    value.startOf(options.round);\n  }\n\n  return value.valueOf();\n}\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\n\n\nfunction determineStepSize(min, max, unit, capacity) {\n  var range = max - min;\n  var interval = INTERVALS[unit];\n  var milliseconds = interval.size;\n  var steps = interval.steps;\n  var i, ilen, factor;\n\n  if (!steps) {\n    return Math.ceil(range / (capacity * milliseconds));\n  }\n\n  for (i = 0, ilen = steps.length; i < ilen; ++i) {\n    factor = steps[i];\n\n    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n      break;\n    }\n  }\n\n  return factor;\n}\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\n\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  var i, interval, factor;\n\n  for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    interval = INTERVALS[UNITS[i]];\n    factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n/**\n * Figures out what unit to format a set of ticks with\n */\n\n\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n  var duration = moment.duration(moment(max).diff(moment(min)));\n  var ilen = UNITS.length;\n  var i, unit;\n\n  for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n    unit = UNITS[i];\n\n    if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\n\n\nfunction generate(min, max, capacity, options) {\n  var timeOpts = options.time;\n  var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n  var major = determineMajorUnit(minor);\n  var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n  var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n  var majorTicksEnabled = options.ticks.major.enabled;\n  var interval = INTERVALS[minor];\n  var first = moment(min);\n  var last = moment(max);\n  var ticks = [];\n  var time;\n\n  if (!stepSize) {\n    stepSize = determineStepSize(min, max, minor, capacity);\n  } // For 'week' unit, handle the first day of week option\n\n\n  if (weekday) {\n    first = first.isoWeekday(weekday);\n    last = last.isoWeekday(weekday);\n  } // Align first/last ticks on unit\n\n\n  first = first.startOf(weekday ? 'day' : minor);\n  last = last.startOf(weekday ? 'day' : minor); // Make sure that the last tick include max\n\n  if (last < max) {\n    last.add(1, minor);\n  }\n\n  time = moment(first);\n\n  if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n    // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n    // we first aligned time on the previous `major` unit then add the number of full\n    // stepSize there is between first and the previous major time.\n    time.startOf(major);\n    time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n  }\n\n  for (; time < last; time.add(stepSize, minor)) {\n    ticks.push(+time);\n  }\n\n  ticks.push(+time);\n  return ticks;\n}\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\n\n\nfunction computeOffsets(table, ticks, min, max, options) {\n  var left = 0;\n  var right = 0;\n  var upper, lower;\n\n  if (options.offset && ticks.length) {\n    if (!options.time.min) {\n      upper = ticks.length > 1 ? ticks[1] : max;\n      lower = ticks[0];\n      left = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n\n    if (!options.time.max) {\n      upper = ticks[ticks.length - 1];\n      lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n      right = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n  }\n\n  return {\n    left: left,\n    right: right\n  };\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n  var ticks = [];\n  var i, ilen, value, major;\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    value = values[i];\n    major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n    ticks.push({\n      value: value,\n      major: major\n    });\n  }\n\n  return ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n  var i, momentDate, hasTime;\n  var ilen = data.length; // find the label with the most parts (milliseconds, minutes, etc.)\n  // format all labels with the same level of detail as the most specific label\n\n  for (i = 0; i < ilen; i++) {\n    momentDate = momentify(data[i], timeOpts);\n\n    if (momentDate.millisecond() !== 0) {\n      return 'MMM D, YYYY h:mm:ss.SSS a';\n    }\n\n    if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n      hasTime = true;\n    }\n  }\n\n  if (hasTime) {\n    return 'MMM D, YYYY h:mm:ss a';\n  }\n\n  return 'MMM D, YYYY';\n}\n\nmodule.exports = function () {\n  var defaultConfig = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    time: {\n      parser: false,\n      // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n      displayFormats: {\n        millisecond: 'h:mm:ss.SSS a',\n        // 11:20:01.123 AM,\n        second: 'h:mm:ss a',\n        // 11:20:01 AM\n        minute: 'h:mm a',\n        // 11:20 AM\n        hour: 'hA',\n        // 5PM\n        day: 'MMM D',\n        // Sep 4\n        week: 'll',\n        // Week 46, or maybe \"[W]WW - YYYY\" ?\n        month: 'MMM YYYY',\n        // Sept 2015\n        quarter: '[Q]Q - YYYY',\n        // Q3\n        year: 'YYYY' // 2015\n\n      }\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var TimeScale = Scale.extend({\n    initialize: function initialize() {\n      if (!moment) {\n        throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n      }\n\n      this.mergeTicksOptions();\n      Scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options; // DEPRECATIONS: output a message only one time per update\n\n      if (options.time && options.time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      }\n\n      return Scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return Scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp; // Convert labels to timestamps\n\n      for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n        labels.push(parse(chart.data.labels[i], me));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(data[j], me);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            timestamps.push.apply(timestamps, labels);\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n      max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n      me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n      return ticksFromTimestamps(ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return momentify(label, timeOpts).format(me._labelFormat);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(tick, index, ticks, formatOverride) {\n      var me = this;\n      var options = me.options;\n      var time = tick.valueOf();\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = tick.clone().startOf(majorUnit).valueOf();\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = interpolate(me._table, 'time', time, 'pos');\n      return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(value, me);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n      var time = interpolate(me._table, 'pos', pos, 'time');\n      return moment(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this;\n      var formatOverride = me.options.time.displayFormats.millisecond; // Pick the longest format for guestimation\n\n      var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  });\n  scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms); // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n      date.setFullYear(y);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date = new Date(Date.UTC.apply(null, arguments)); // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n      date.setUTCFullYear(y);\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    if (!m) {\n      return isArray(this._weekdays) ? this._weekdays : this._weekdays['standalone'];\n    }\n\n    return isArray(this._weekdays) ? this._weekdays[m.day()] : this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {\n      milliseconds: 0,\n      months: 0\n    };\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  function startOf(units) {\n    units = normalizeUnits(units); // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n\n    switch (units) {\n      case 'year':\n        this.month(0);\n\n      /* falls through */\n\n      case 'quarter':\n      case 'month':\n        this.date(1);\n\n      /* falls through */\n\n      case 'week':\n      case 'isoWeek':\n      case 'day':\n      case 'date':\n        this.hours(0);\n\n      /* falls through */\n\n      case 'hour':\n        this.minutes(0);\n\n      /* falls through */\n\n      case 'minute':\n        this.seconds(0);\n\n      /* falls through */\n\n      case 'second':\n        this.milliseconds(0);\n    } // weeks are a special case\n\n\n    if (units === 'week') {\n      this.weekday(0);\n    }\n\n    if (units === 'isoWeek') {\n      this.isoWeekday(1);\n    } // quarters are also special\n\n\n    if (units === 'quarter') {\n      this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n  }\n\n  function endOf(units) {\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond') {\n      return this;\n    } // 'date' is an alias for 'day', so it should be considered as such.\n\n\n    if (units === 'date') {\n      units = 'day';\n    }\n\n    return this.startOf(units).add(1, units === 'isoWeek' ? 'week' : units).subtract(1, 'ms');\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n      return units === 'month' ? months : months / 12;\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.23.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      // Specific to Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }],\n    yAxes: [{\n      type: 'linear'\n    }]\n  }\n});\n\ndefaults._set('horizontalBar', {\n  hover: {\n    mode: 'index',\n    axis: 'y'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      position: 'bottom'\n    }],\n    yAxes: [{\n      position: 'left',\n      type: 'category',\n      // Specific to Horizontal Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }]\n  },\n  elements: {\n    rectangle: {\n      borderSkipped: 'left'\n    }\n  },\n  tooltips: {\n    callbacks: {\n      title: function title(item, data) {\n        // Pick first xLabel for now\n        var title = '';\n\n        if (item.length > 0) {\n          if (item[0].yLabel) {\n            title = item[0].yLabel;\n          } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n            title = data.labels[item[0].index];\n          }\n        }\n\n        return title;\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        return datasetLabel + ': ' + item.xLabel;\n      }\n    },\n    mode: 'index',\n    axis: 'y'\n  }\n});\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\n\n\nfunction computeMinSampleSize(scale, pixels) {\n  var min = scale.isHorizontal() ? scale.width : scale.height;\n  var ticks = scale.getTicks();\n  var prev, curr, i, ilen;\n\n  for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n    min = Math.min(min, pixels[i] - pixels[i - 1]);\n  }\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    min = i > 0 ? Math.min(min, curr - prev) : min;\n    prev = curr;\n  }\n\n  return min;\n}\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\n\n\nfunction computeFitCategoryTraits(index, ruler, options) {\n  var thickness = options.barThickness;\n  var count = ruler.stackCount;\n  var curr = ruler.pixels[index];\n  var size, ratio;\n\n  if (helpers.isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * count;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / count,\n    ratio: ratio,\n    start: curr - size / 2\n  };\n}\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\n\n\nfunction computeFlexCategoryTraits(index, ruler, options) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  var start, size;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale end extremity.\n    prev = curr - (next === null ? ruler.end - curr : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  start = curr - (curr - prev) / 2 * percent;\n  size = (next - prev) / 2 * percent;\n  return {\n    chunk: size / ruler.stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bar = Chart.DatasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      Chart.DatasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n      var custom = rectangle.custom || {};\n      var rectangleOptions = chart.options.elements.rectangle;\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        datasetLabel: dataset.label,\n        label: chart.data.labels[index],\n        borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n        backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n        borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n        borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n      };\n      me.updateElementGeometry(rectangle, index, reset);\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    updateElementGeometry: function updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n      var vscale = me.getValueScale();\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getValueScale: function getValueScale() {\n      return this.getScaleForId(this.getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    getIndexScale: function getIndexScale() {\n      return this.getScaleForId(this.getIndexScaleId());\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {Number} [last] - The dataset index\n     * @returns {Array} The stack list\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getIndexScale();\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {Number} [datasetIndex] - The dataset index\n     * @param {String} [name] - The stack name to find\n     * @returns {Number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n      var scale = me.getIndexScale();\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var scale = me.getValueScale();\n      var datasets = chart.data.datasets;\n      var value = scale.getRightValue(datasets[datasetIndex].data[index]);\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller.getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = (head - base) / 2;\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getValueScale();\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers.canvas.unclipArea(chart.ctx);\n    }\n  });\n  Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      // bubble should probably use a linear scale by default\n      position: 'bottom',\n      id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n    }],\n    yAxes: [{\n      type: 'linear',\n      position: 'left',\n      id: 'y-axis-0'\n    }]\n  },\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        // Title doesn't make sense for scatter since we format the data as a point\n        return '';\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n        return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bubble = Chart.DatasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n      model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n      model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var resolve = helpers.options.resolve;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n  animation: {\n    // Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    // Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false\n  },\n  hover: {\n    mode: 'single'\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc && arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n        if (meta.data[index]) {\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n      }\n\n      chart.update();\n    }\n  },\n  // The percentage of the chart that we cut out of the middle.\n  cutoutPercentage: 50,\n  // The rotation of the chart, where the first data arc begins.\n  rotation: Math.PI * -0.5,\n  // The total circumference of the chart.\n  circumference: Math.PI * 2.0,\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(tooltipItem, data) {\n        var dataLabel = data.labels[tooltipItem.index];\n        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n        if (helpers.isArray(dataLabel)) {\n          // show value on first line of multiline label\n          // need to clone because we are changing the value\n          dataLabel = dataLabel.slice();\n          dataLabel[0] += value;\n        } else {\n          dataLabel += value;\n        }\n\n        return dataLabel;\n      }\n    }\n  }\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\n\ndefaults._set('pie', {\n  cutoutPercentage: 0\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n      var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth(meta.data);\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.getRingIndex(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Resets the visual styles\n\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var elementOpts = this.chart.options.elements.arc;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth); // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var index = this.index;\n      var length = arcs.length;\n      var borderWidth;\n      var hoverWidth;\n\n      for (var i = 0; i < length; i++) {\n        borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n        hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n        max = borderWidth > max ? borderWidth : max;\n        max = hoverWidth > max ? hoverWidth : max;\n      }\n\n      return max;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n  showLines: true,\n  spanGaps: false,\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      id: 'x-axis-0'\n    }],\n    yAxes: [{\n      type: 'linear',\n      id: 'y-axis-0'\n    }]\n  }\n});\n\nmodule.exports = function (Chart) {\n  function lineEnabled(dataset, options) {\n    return helpers.valueOrDefault(dataset.showLine, options.showLines);\n  }\n\n  Chart.controllers.line = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var options = me.chart.options;\n      var lineElementOptions = options.elements.line;\n      var scale = me.getScaleForId(meta.yAxisID);\n      var i, ilen, custom;\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, options); // Update Line\n\n      if (showLine) {\n        custom = line.custom || {}; // Compatibility: If the properties are defined with only the old name, use those values\n\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = {\n          // Appearance\n          // The default behavior of lines is to break at null values, according\n          // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n          // This option gives lines the ability to span gaps\n          spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n          cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode)\n        };\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    getPointBackgroundColor: function getPointBackgroundColor(point, index) {\n      var backgroundColor = this.chart.options.elements.point.backgroundColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.backgroundColor) {\n        backgroundColor = custom.backgroundColor;\n      } else if (dataset.pointBackgroundColor) {\n        backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n      } else if (dataset.backgroundColor) {\n        backgroundColor = dataset.backgroundColor;\n      }\n\n      return backgroundColor;\n    },\n    getPointBorderColor: function getPointBorderColor(point, index) {\n      var borderColor = this.chart.options.elements.point.borderColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.borderColor) {\n        borderColor = custom.borderColor;\n      } else if (dataset.pointBorderColor) {\n        borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n      } else if (dataset.borderColor) {\n        borderColor = dataset.borderColor;\n      }\n\n      return borderColor;\n    },\n    getPointBorderWidth: function getPointBorderWidth(point, index) {\n      var borderWidth = this.chart.options.elements.point.borderWidth;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.borderWidth)) {\n        borderWidth = custom.borderWidth;\n      } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n        borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n      } else if (!isNaN(dataset.borderWidth)) {\n        borderWidth = dataset.borderWidth;\n      }\n\n      return borderWidth;\n    },\n    getPointRotation: function getPointRotation(point, index) {\n      var pointRotation = this.chart.options.elements.point.rotation;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.rotation)) {\n        pointRotation = custom.rotation;\n      } else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n        pointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n      }\n\n      return pointRotation;\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var pointOptions = me.chart.options.elements.point;\n      var x, y; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n        pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n        rotation: me.getPointRotation(point, index),\n        backgroundColor: me.getPointBackgroundColor(point, index),\n        borderColor: me.getPointBorderColor(point, index),\n        borderWidth: me.getPointBorderWidth(point, index),\n        tension: meta.dataset._model ? meta.dataset._model.tension : 0,\n        steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n        // Tooltip\n        hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n      };\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, point, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (meta.dataset._model.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n        helpers.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          point = points[i];\n          model = point._model;\n          controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (me.chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n          model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n          model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n          model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      // Point\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n      model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n  scale: {\n    type: 'radialLinear',\n    angleLines: {\n      display: false\n    },\n    gridLines: {\n      circular: true\n    },\n    pointLabels: {\n      display: false\n    },\n    ticks: {\n      beginAtZero: true\n    }\n  },\n  // Boolean - Whether to animate the rotation of the chart\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  startAngle: -0.5 * Math.PI,\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n        meta.data[index].hidden = !meta.data[index].hidden;\n      }\n\n      chart.update();\n    }\n  },\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(item, data) {\n        return data.labels[item.index] + ': ' + item.yLabel;\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.polarArea = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      }); // Apply border and fill style\n\n      var elementOpts = this.chart.options.elements.arc;\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var model = arc._model;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return helpers.options.resolve([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n  scale: {\n    type: 'radialLinear'\n  },\n  elements: {\n    line: {\n      tension: 0 // no bezier in radar\n\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.radar = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data;\n      var custom = line.custom || {};\n      var dataset = me.getDataset();\n      var lineElementOptions = me.chart.options.elements.line;\n      var scale = me.chart.scale; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      }\n\n      helpers.extend(meta.dataset, {\n        // Utility\n        _datasetIndex: me.index,\n        _scale: scale,\n        // Data\n        _children: points,\n        _loop: true,\n        // Model\n        _model: {\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle\n        }\n      });\n      meta.dataset.pivot(); // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      }, me); // Update bezier control points\n\n      me.updateBezierControlPoints();\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointElementOptions = me.chart.options.elements.point;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]); // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      helpers.extend(point, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: reset ? scale.xCenter : pointPosition.x,\n          // value not used in dataset scale, but we want a consistent API between scales\n          y: reset ? scale.yCenter : pointPosition.y,\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n          radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n          borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n          borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n          pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n          rotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n          // Tooltip\n          hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n        }\n      });\n      point._model.skip = custom.skip ? custom.skip : isNaN(point._model.x) || isNaN(point._model.y);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var chartArea = this.chart.chartArea;\n      var meta = this.getMeta();\n      helpers.each(meta.data, function (point, index) {\n        var model = point._model;\n        var controlPoints = helpers.splineCurve(helpers.previousItem(meta.data, index, true)._model, model, helpers.nextItem(meta.data, index, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n        model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n        model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n        model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top); // Now pivot the point for animation\n\n        point.pivot();\n      });\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var custom = point.custom || {};\n      var index = point._index;\n      var model = point._model;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      id: 'x-axis-1',\n      // need an ID so datasets can reference the scale\n      type: 'linear',\n      // scatter should not use a category axis\n      position: 'bottom'\n    }],\n    yAxes: [{\n      id: 'y-axis-1',\n      type: 'linear',\n      position: 'left'\n    }]\n  },\n  showLines: false,\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return ''; // doesn't make sense for scatter since data are formatted as a point\n      },\n      label: function label(item) {\n        return '(' + item.xLabel + ', ' + item.yLabel + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  // Scatter charts use line controllers\n  Chart.controllers.scatter = Chart.controllers.line;\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bar = function (context, config) {\n    config.type = 'bar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bubble = function (context, config) {\n    config.type = 'bubble';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Doughnut = function (context, config) {\n    config.type = 'doughnut';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Line = function (context, config) {\n    config.type = 'line';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.PolarArea = function (context, config) {\n    config.type = 'polarArea';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Radar = function (context, config) {\n    config.type = 'radar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Scatter = function (context, config) {\n    config.type = 'scatter';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {\n    filler: {\n      propagate: true\n    }\n  }\n});\n\nvar mappers = {\n  dataset: function dataset(source) {\n    var index = source.fill;\n    var chart = source.chart;\n    var meta = chart.getDatasetMeta(index);\n    var visible = meta && chart.isDatasetVisible(index);\n    var points = visible && meta.dataset._children || [];\n    var length = points.length || 0;\n    return !length ? null : function (point, i) {\n      return i < length && points[i]._view || null;\n    };\n  },\n  boundary: function boundary(source) {\n    var boundary = source.boundary;\n    var x = boundary ? boundary.x : null;\n    var y = boundary ? boundary.y : null;\n    return function (point) {\n      return {\n        x: x === null ? point.x : x,\n        y: y === null ? point.y : y\n      };\n    };\n  }\n}; // @todo if (fill[0] === '#')\n\nfunction decodeFill(el, index, count) {\n  var model = el._model || {};\n  var fill = model.fill;\n  var target;\n\n  if (fill === undefined) {\n    fill = !!model.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  target = parseFloat(fill, 10);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  switch (fill) {\n    // compatibility\n    case 'bottom':\n      return 'start';\n\n    case 'top':\n      return 'end';\n\n    case 'zero':\n      return 'origin';\n    // supported boundaries\n\n    case 'origin':\n    case 'start':\n    case 'end':\n      return fill;\n    // invalid fill values\n\n    default:\n      return false;\n  }\n}\n\nfunction computeBoundary(source) {\n  var model = source.el._model || {};\n  var scale = source.el._scale || {};\n  var fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (isFinite(fill)) {\n    return null;\n  } // Backward compatibility: until v3, we still need to support boundary values set on\n  // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n  // controllers might still use it (e.g. the Smith chart).\n\n\n  if (fill === 'start') {\n    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n  } else if (fill === 'end') {\n    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n  } else if (model.scaleZero !== undefined) {\n    target = model.scaleZero;\n  } else if (scale.getBasePosition) {\n    target = scale.getBasePosition();\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (target !== undefined && target !== null) {\n    if (target.x !== undefined && target.y !== undefined) {\n      return target;\n    }\n\n    if (typeof target === 'number' && isFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction createMapper(source) {\n  var fill = source.fill;\n  var type = 'dataset';\n\n  if (fill === false) {\n    return null;\n  }\n\n  if (!isFinite(fill)) {\n    type = 'boundary';\n  }\n\n  return mappers[type](source);\n}\n\nfunction isDrawable(point) {\n  return point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n  var i;\n\n  if (!len0 || !len1) {\n    return;\n  } // building first area curve (normal)\n\n\n  ctx.moveTo(curve0[0].x, curve0[0].y);\n\n  for (i = 1; i < len0; ++i) {\n    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n  } // joining the two area curves\n\n\n  ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n  for (i = len1 - 1; i > 0; --i) {\n    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n  }\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n  var count = points.length;\n  var span = view.spanGaps;\n  var curve0 = [];\n  var curve1 = [];\n  var len0 = 0;\n  var len1 = 0;\n  var i, ilen, index, p0, p1, d0, d1;\n  ctx.beginPath();\n\n  for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n    index = i % count;\n    p0 = points[index]._view;\n    p1 = mapper(p0, index, view);\n    d0 = isDrawable(p0);\n    d1 = isDrawable(p1);\n\n    if (d0 && d1) {\n      len0 = curve0.push(p0);\n      len1 = curve1.push(p1);\n    } else if (len0 && len1) {\n      if (!span) {\n        drawArea(ctx, curve0, curve1, len0, len1);\n        len0 = len1 = 0;\n        curve0 = [];\n        curve1 = [];\n      } else {\n        if (d0) {\n          curve0.push(p0);\n        }\n\n        if (d1) {\n          curve1.push(p1);\n        }\n      }\n    }\n  }\n\n  drawArea(ctx, curve0, curve1, len0, len1);\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\n\nmodule.exports = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n    var count = (chart.data.datasets || []).length;\n    var propagate = options.propagate;\n    var sources = [];\n    var meta, i, el, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      el = meta.dataset;\n      source = null;\n\n      if (el && el._model && el instanceof elements.Line) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          fill: decodeFill(el, i, count),\n          chart: chart,\n          el: el\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, propagate);\n      source.boundary = computeBoundary(source);\n      source.mapper = createMapper(source);\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n    var meta = args.meta.$filler;\n\n    if (!meta) {\n      return;\n    }\n\n    var ctx = chart.ctx;\n    var el = meta.el;\n    var view = el._view;\n    var points = el._children || [];\n    var mapper = meta.mapper;\n    var color = view.backgroundColor || defaults.global.defaultColor;\n\n    if (mapper && color && points.length) {\n      helpers.canvas.clipArea(ctx, chart.chartArea);\n      doFill(ctx, points, mapper, view, color, el._loop);\n      helpers.canvas.unclipArea(ctx);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  legend: {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    weight: 1000,\n    // a callback that will handle\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.datasetIndex;\n      var ci = this.chart;\n      var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n      meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n      ci.update();\n    },\n    onHover: null,\n    labels: {\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n        return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n          return {\n            text: dataset.label,\n            fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n            hidden: !chart.isDatasetVisible(i),\n            lineCap: dataset.borderCapStyle,\n            lineDash: dataset.borderDash,\n            lineDashOffset: dataset.borderDashOffset,\n            lineJoin: dataset.borderJoinStyle,\n            lineWidth: dataset.borderWidth,\n            strokeStyle: dataset.borderColor,\n            pointStyle: dataset.pointStyle,\n            // Below is extra data used for toggling the datasets\n            datasetIndex: i\n          };\n        }, this) : [];\n      }\n    }\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n\n    for (var i = 0; i < chart.data.datasets.length; i++) {\n      text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n      if (chart.data.datasets[i].label) {\n        text.push(chart.data.datasets[i].label);\n      }\n\n      text.push('</li>');\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  }\n});\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\n\n\nfunction getBoxWidth(labelOpts, fontSize) {\n  return labelOpts.usePointStyle ? fontSize * Math.SQRT2 : labelOpts.boxWidth;\n}\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Legend = Element.extend({\n  initialize: function initialize(config) {\n    helpers.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n    this.legendHitBoxes = []; // Are we in doughnut mode which has a different data type\n\n    this.doughnutMode = false;\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all legend types.\n  // Any function can be extended by the legend type\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: function buildLabels() {\n    var me = this;\n    var labelOpts = me.options.labels || {};\n    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(function (item) {\n        return labelOpts.filter(item, me.chart.data);\n      });\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  },\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var display = opts.display;\n    var ctx = me.ctx;\n    var globalDefault = defaults.global;\n    var valueOrDefault = helpers.valueOrDefault;\n    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily); // Reset hit boxes\n\n    var hitboxes = me.legendHitBoxes = [];\n    var minSize = me.minSize;\n    var isHorizontal = me.isHorizontal();\n\n    if (isHorizontal) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = display ? 10 : 0;\n    } else {\n      minSize.width = display ? 10 : 0;\n      minSize.height = me.maxHeight; // fill all the height\n    } // Increase sizes here\n\n\n    if (display) {\n      ctx.font = labelFont;\n\n      if (isHorizontal) {\n        // Labels\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n        var lineWidths = me.lineWidths = [0];\n        var totalHeight = me.legendItems.length ? fontSize + labelOpts.padding : 0;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n          if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n            totalHeight += fontSize + labelOpts.padding;\n            lineWidths[lineWidths.length] = me.left;\n          } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: width,\n            height: fontSize\n          };\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n        });\n        minSize.height += totalHeight;\n      } else {\n        var vPadding = labelOpts.padding;\n        var columnWidths = me.columnWidths = [];\n        var totalWidth = labelOpts.padding;\n        var currentColWidth = 0;\n        var currentColHeight = 0;\n        var itemHeight = fontSize + vPadding;\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n          if (currentColHeight + itemHeight > minSize.height) {\n            totalWidth += currentColWidth + labelOpts.padding;\n            columnWidths.push(currentColWidth); // previous column width\n\n            currentColWidth = 0;\n            currentColHeight = 0;\n          } // Get max width\n\n\n          currentColWidth = Math.max(currentColWidth, itemWidth);\n          currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: itemWidth,\n            height: fontSize\n          };\n        });\n        totalWidth += currentColWidth;\n        columnWidths.push(currentColWidth);\n        minSize.width += totalWidth;\n      }\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  // Actually draw the legend on the canvas\n  draw: function draw() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var globalDefault = defaults.global;\n    var lineDefault = globalDefault.elements.line;\n    var legendWidth = me.width;\n    var lineWidths = me.lineWidths;\n\n    if (opts.display) {\n      var ctx = me.ctx;\n      var valueOrDefault = helpers.valueOrDefault;\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n      var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n      var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n      var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n      var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var cursor; // Canvas setup\n\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = fontColor; // for strikethrough effect\n\n      ctx.fillStyle = fontColor; // render in correct colour\n\n      ctx.font = labelFont;\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\n      var hitboxes = me.legendHitBoxes; // current position\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0) {\n          return;\n        } // Set the ctx for the box\n\n\n        ctx.save();\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n        ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n        var isLineWidthZero = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0;\n\n        if (ctx.setLineDash) {\n          // IE 9 and 10 do not support line dash\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n        }\n\n        if (opts.labels && opts.labels.usePointStyle) {\n          // Recalculate x and y for drawPoint() because its expecting\n          // x and y to be center of figure (instead of top left)\n          var radius = fontSize * Math.SQRT2 / 2;\n          var offSet = radius / Math.SQRT2;\n          var centerX = x + offSet;\n          var centerY = y + offSet; // Draw pointStyle as legend symbol\n\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n        } else {\n          // Draw box as legend symbol\n          if (!isLineWidthZero) {\n            ctx.strokeRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.fillRect(x, y, boxWidth, fontSize);\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem, textWidth) {\n        var halfFontSize = fontSize / 2;\n        var xLeft = boxWidth + halfFontSize + x;\n        var yMiddle = y + halfFontSize;\n        ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n        if (legendItem.hidden) {\n          // Strikethrough the text if hidden\n          ctx.beginPath();\n          ctx.lineWidth = 2;\n          ctx.moveTo(xLeft, yMiddle);\n          ctx.lineTo(xLeft + textWidth, yMiddle);\n          ctx.stroke();\n        }\n      }; // Horizontal\n\n\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        cursor = {\n          x: me.left + (legendWidth - lineWidths[0]) / 2,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + labelOpts.padding,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      }\n\n      var itemHeight = fontSize + labelOpts.padding;\n      helpers.each(me.legendItems, function (legendItem, i) {\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n\n        if (isHorizontal) {\n          if (x + width >= legendWidth) {\n            y = cursor.y += itemHeight;\n            cursor.line++;\n            x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2;\n          }\n        } else if (y + itemHeight > me.bottom) {\n          x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n          y = cursor.y = me.top + labelOpts.padding;\n          cursor.line++;\n        }\n\n        drawLegendBox(x, y, legendItem);\n        hitboxes[i].left = x;\n        hitboxes[i].top = y; // Fill the actual label\n\n        fillText(x, y, legendItem, textWidth);\n\n        if (isHorizontal) {\n          cursor.x += width + labelOpts.padding;\n        } else {\n          cursor.y += itemHeight;\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @return {Boolean} true if a change occured\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var opts = me.options;\n    var type = e.type === 'mouseup' ? 'click' : e.type;\n    var changed = false;\n\n    if (type === 'mousemove') {\n      if (!opts.onHover) {\n        return;\n      }\n    } else if (type === 'click') {\n      if (!opts.onClick) {\n        return;\n      }\n    } else {\n      return;\n    } // Chart event already has relative position in it\n\n\n    var x = e.x;\n    var y = e.y;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      // See if we are touching one of the dataset boxes\n      var lh = me.legendHitBoxes;\n\n      for (var i = 0; i < lh.length; ++i) {\n        var hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          // Touching an element\n          if (type === 'click') {\n            // use e.native for backwards compatibility\n            opts.onClick.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          } else if (type === 'mousemove') {\n            // use e.native for backwards compatibility\n            opts.onHover.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return changed;\n  }\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n  var legend = new Legend({\n    ctx: chart.ctx,\n    options: legendOpts,\n    chart: chart\n  });\n  layouts.configure(chart, legend, legendOpts);\n  layouts.addBox(chart, legend);\n  chart.legend = legend;\n}\n\nmodule.exports = {\n  id: 'legend',\n\n  /**\n   * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n   * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Legend,\n  beforeInit: function beforeInit(chart) {\n    var legendOpts = chart.options.legend;\n\n    if (legendOpts) {\n      createNewLegendAndAttach(chart, legendOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var legendOpts = chart.options.legend;\n    var legend = chart.legend;\n\n    if (legendOpts) {\n      helpers.mergeIf(legendOpts, defaults.global.legend);\n\n      if (legend) {\n        layouts.configure(chart, legend, legendOpts);\n        legend.options = legendOpts;\n      } else {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    } else if (legend) {\n      layouts.removeBox(chart, legend);\n      delete chart.legend;\n    }\n  },\n  afterEvent: function afterEvent(chart, e) {\n    var legend = chart.legend;\n\n    if (legend) {\n      legend.handleEvent(e);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  title: {\n    display: false,\n    fontStyle: 'bold',\n    fullWidth: true,\n    lineHeight: 1.2,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000 // by default greater than legend (1000) to be above\n\n  }\n});\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Title = Element.extend({\n  initialize: function initialize(config) {\n    var me = this;\n    helpers.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n    me.legendHitBoxes = [];\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: noop,\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var display = opts.display;\n    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n    var minSize = me.minSize;\n    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n    var textSize = display ? lineCount * lineHeight + opts.padding * 2 : 0;\n\n    if (me.isHorizontal()) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = textSize;\n    } else {\n      minSize.width = textSize;\n      minSize.height = me.maxHeight; // fill all the height\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    var pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  },\n  // Actually draw the title block on the canvas\n  draw: function draw() {\n    var me = this;\n    var ctx = me.ctx;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var globalDefaults = defaults.global;\n\n    if (opts.display) {\n      var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n      var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n      var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n      var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n      var offset = lineHeight / 2 + opts.padding;\n      var rotation = 0;\n      var top = me.top;\n      var left = me.left;\n      var bottom = me.bottom;\n      var right = me.right;\n      var maxWidth, titleX, titleY;\n      ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\n      ctx.font = titleFont; // Horizontal\n\n      if (me.isHorizontal()) {\n        titleX = left + (right - left) / 2; // midpoint of the width\n\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        titleX = opts.position === 'left' ? left + offset : right - offset;\n        titleY = top + (bottom - top) / 2;\n        maxWidth = bottom - top;\n        rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n      }\n\n      ctx.save();\n      ctx.translate(titleX, titleY);\n      ctx.rotate(rotation);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      var text = opts.text;\n\n      if (helpers.isArray(text)) {\n        var y = 0;\n\n        for (var i = 0; i < text.length; ++i) {\n          ctx.fillText(text[i], 0, y, maxWidth);\n          y += lineHeight;\n        }\n      } else {\n        ctx.fillText(text, 0, 0, maxWidth);\n      }\n\n      ctx.restore();\n    }\n  }\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nmodule.exports = {\n  id: 'title',\n\n  /**\n   * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n   * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Title,\n  beforeInit: function beforeInit(chart) {\n    var titleOpts = chart.options.title;\n\n    if (titleOpts) {\n      createNewTitleBlockAndAttach(chart, titleOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var titleOpts = chart.options.title;\n    var titleBlock = chart.titleBlock;\n\n    if (titleOpts) {\n      helpers.mergeIf(titleOpts, defaults.global.title);\n\n      if (titleBlock) {\n        layouts.configure(chart, titleBlock, titleOpts);\n        titleBlock.options = titleOpts;\n      } else {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    } else if (titleBlock) {\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    }\n  }\n};","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;"],"sourceRoot":""}